{"version":3,"sources":["components/Entry/Entry.js","components/EntryList/EntryList.js","components/Entries/Entries.js","components/HeaderTable/HeaderTable.js","components/Analysis/Analysis.js","App.js","index.js"],"names":["Entry","headers","id","date","description","header","amount","removeEntry","changeEntry","className","substring","type","value","onChange","e","target","Object","keys","sort","map","i","toFixed","onClick","EntryList","entries","setDate","setDescription","setHeader","setAmount","addEntry","Number","entry","Entries","a","file","files","text","textResponse","lines","split","length","fields","replace","HeaderTable","inout","calculate","addHeader","newHeaderIn","setNewHeaderIn","newHeaderOut","setNewHeaderOut","removeHeader","showEmpty","total","handleRemoveClick","el","Analysis","fromDate","setFromDate","toDate","setToDate","setShowEmpty","calculateNetResult","array","filter","reduce","b","htmlFor","defaultChecked","totalIn","incomeHeaders","totalOut","expenseHeaders","App","year","useState","setEntries","setHeaders","daysInMonth","Date","getFullYear","String","getMonth","padStart","now","prev","to","activeClassName","exact","path","newHeader","name","toUpperCase","toLowerCase","alert","newHeaders","assign","ReactDOM","render","document","getElementById"],"mappings":"wRAEO,SAASA,EAAT,GAA4F,IAA5EC,EAA2E,EAA3EA,QAASC,EAAkE,EAAlEA,GAAIC,EAA8D,EAA9DA,KAAMC,EAAwD,EAAxDA,YAAaC,EAA2C,EAA3CA,OAAQC,EAAmC,EAAnCA,OAAQC,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,YAchF,OACQ,qBAAIC,UAAU,QAAd,UACI,oBAAIA,UAAU,cAAd,SAA6BN,EAAKO,UAAU,EAAE,IAAM,IAAMP,EAAKO,UAAU,EAAG,GAAK,IAAMP,EAAKO,UAAU,EAAG,KACzG,oBAAID,UAAU,qBAAd,SAAmC,uBAAOE,KAAK,OAAOC,MAAOR,EAAaS,SAXtF,SAAiCC,GAC7BN,EAAYN,EAAIC,EAAMW,EAAEC,OAAOH,MAAOP,EAAQC,QAWtC,oBAAIG,UAAU,gBAAd,SAA8B,yBAAQG,MAAOP,EAAQQ,SAhBjE,SAA4BC,GACxBN,EAAYN,EAAIC,EAAMC,EAAaU,EAAEC,OAAOH,MAAON,IAeb,UACd,wBAAiBM,MAAM,IAAX,MACXI,OAAOC,KAAKhB,GAASiB,OAAOC,KAAI,SAACd,EAAQe,GACtC,OAAO,wBAAgBR,MAAOP,EAAvB,SAAgCA,GAAnBe,WAGvC,qBAAIX,UAAWR,EAAQI,GAAU,EAAI,mBAAqB,oBAA1D,oBAAwFC,EAAOe,QAAQ,MACxG,oBAAIZ,UAAU,gBAAd,SAA8B,wBAAQa,QAflD,WACIf,EAAYL,IAc0B,uBCxBvC,SAASqB,EAAT,GACyE,IADrDC,EACoD,EADpDA,QAASvB,EAC2C,EAD3CA,QAASE,EACkC,EADlCA,KAAMsB,EAC4B,EAD5BA,QAASrB,EACmB,EADnBA,YAAasB,EACM,EADNA,eACrErB,EAA2E,EAA3EA,OAAQsB,EAAmE,EAAnEA,UAAWrB,EAAwD,EAAxDA,OAAQsB,EAAgD,EAAhDA,UAAWC,EAAqC,EAArCA,SAAUtB,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,YAM7D,OACI,qBAAKC,UAAU,YAAf,SACI,kCACI,gCACI,+BACI,oBAAIA,UAAU,cAAd,kBACA,oBAAIA,UAAU,qBAAd,yBACA,oBAAIA,UAAU,gBAAd,oBACA,oBAAIA,UAAU,gBAAd,oBACA,oBAAIA,UAAU,uBAGtB,kCACI,+BACI,oBAAIA,UAAU,cAAd,SAA4B,uBAAOE,KAAK,OAAOE,SAAU,SAAAC,GAAC,OAAIW,EAAQX,EAAEC,OAAOH,YAC/E,oBAAIH,UAAU,qBAAd,SAAmC,uBAAOE,KAAK,OAAOC,MAAOR,EAAaS,SAAU,SAAAC,GAAC,OAAIY,EAAeZ,EAAEC,OAAOH,YACjH,oBAAIH,UAAU,gBAAd,SAA8B,yBAAQG,MAAOP,EAAQQ,SAAU,SAAAC,GAAC,OAAIa,EAAUb,EAAEC,OAAOH,QAAzD,UACtB,wBAAiBA,MAAM,IAAX,MACXI,OAAOC,KAAKhB,GAASiB,OAAOC,KAAI,SAACd,EAAQe,GACtC,OAAO,wBAAgBR,MAAOP,EAAvB,SAAgCA,GAAnBe,WAGhC,oBAAIX,UAAU,gBAAd,SAA8B,uBAAOE,KAAK,SAASC,MAAON,EAAQO,SAAU,SAAAC,GAAC,OAAIc,EAAUE,OAAOhB,EAAEC,OAAOH,aAC3G,oBAAIH,UAAU,gBAAd,SAA8B,wBAAQa,QA3B1D,WACIO,EAAS1B,EAAMC,EAAaC,EAAQC,IA0BU,oBAEjCkB,EAAQL,KAAI,SAACY,EAAOX,GACjB,OAAO,cAACpB,EAAD,CAAeC,QAASA,EAASC,GAAI6B,EAAM7B,GAAIC,KAAM4B,EAAM5B,KAAMC,YAAa2B,EAAM3B,YAAaC,OAAQ0B,EAAM1B,OAAQC,OAAQyB,EAAMzB,OAAQC,YAAaA,EAAaC,YAAaA,GAAxKY,cCjCpC,SAASY,EAAT,GAA4J,IAA1IR,EAAyI,EAAzIA,QAASvB,EAAgI,EAAhIA,QAASE,EAAuH,EAAvHA,KAAMsB,EAAiH,EAAjHA,QAASrB,EAAwG,EAAxGA,YAAasB,EAA2F,EAA3FA,eAAgBrB,EAA2E,EAA3EA,OAAQsB,EAAmE,EAAnEA,UAAWrB,EAAwD,EAAxDA,OAAQsB,EAAgD,EAAhDA,UAAWC,EAAqC,EAArCA,SAAUtB,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,YAAc,4CAG9J,WAA6BM,GAA7B,+BAAAmB,EAAA,6DACQC,EAAOpB,EAAEC,OAAOoB,MAAM,GAD9B,SAE6BD,EAAKE,OAFlC,OAII,IAFIC,EAFR,OAGQC,EAAQD,EAAaE,MAAM,MACtBnB,EAAI,EAAGA,EAAIkB,EAAME,OAAS,EAAGpB,IAC9BqB,EAASH,EAAMlB,GAAGmB,MAAM,KACxBpC,EAFmC,UAEzBsC,EAAO,GAAG/B,UAAU,EAAG,GAFE,YAEI+B,EAAO,GAAG/B,UAAU,EAAG,GAF3B,YAEiC+B,EAAO,GAAG/B,UAAU,EAAG,IAC3FN,EAAcqC,EAAO,GAAG/B,UAAU,EAAG+B,EAAO,GAAGD,OAAS,GACxDnC,EAAuB,UAAdoC,EAAO,GAAiB,qBAAuB,uBACxDnC,EAASwB,OAAOW,EAAO,GAAG/B,UAAU,EAAG+B,EAAO,GAAGD,OAAS,GAAGE,QAAQ,IAAI,MAC7Eb,EAAS1B,EAAMC,EAAaC,EAAQC,GAV5C,4CAH8J,sBAiB9J,OACI,sBAAKG,UAAU,UAAf,UACI,gDACI,uBAAOE,KAAK,OAAOE,SApB+H,8CAqBtJ,uBACA,yCACA,cAACU,EAAD,CAAWC,QAASA,EAASvB,QAASA,EAASE,KAAMA,EAAMsB,QAASA,EAASrB,YAAaA,EAAasB,eAAgBA,EAAgBrB,OAAQA,EAAQsB,UAAWA,EAAWrB,OAAQA,EAAQsB,UAAWA,EAAWC,SAAUA,EAAUtB,YAAaA,EAAaC,YAAaA,IAC9Q,uBACA,0BC1BL,SAASmC,EAAT,GACwB,IADFC,EACC,EADDA,MAAOC,EACN,EADMA,UAAWC,EACjB,EADiBA,UAAWC,EAC5B,EAD4BA,YAAaC,EACzC,EADyCA,eAAgBC,EACzD,EADyDA,aAAcC,EACvE,EADuEA,gBACjGC,EAA0B,EAA1BA,aAAcC,EAAY,EAAZA,UAAY,EAEHP,IAFG,mBAErB5C,EAFqB,KAEZoD,EAFY,KAS1B,SAASC,EAAkBxC,GACvBqC,EAAarC,EAAEC,OAAOH,OAG1B,OACI,qBAAKH,UAAU,QAAf,SACI,kCACI,gCACI,+BACI,oBAAIA,UAAU,gBAAd,oBACA,oBAAIA,UAAU,gBAAd,oBACA,oBAAIA,UAAU,oBAAd,eACA,oBAAIA,UAAU,uBAGtB,kCACA,+BACQ,oBAAIA,UAAU,gBAAd,SAA8B,uBAAOE,KAAK,OAAOC,MAAiB,OAAVgC,EAAiBG,EAAcE,EAAcpC,SAAU,SAAAC,GAAC,MAAc,OAAV8B,EAAiBI,EAAelC,EAAEC,OAAOH,OAASsC,EAAgBpC,EAAEC,OAAOH,YAC/L,oBAAIH,UAAU,kBACd,oBAAIA,UAAU,sBACd,oBAAIA,UAAU,gBAAd,SAA8B,wBAAQa,QAzB1D,WACIwB,EAAoB,OAAVF,EAAiBG,EAAcE,EAAwB,OAAVL,EAAiB,GAAK,GACnE,OAAVA,EAAiBI,EAAe,IAAME,EAAgB,KAuBR,oBAGlClC,OAAOQ,QAAQvB,GAASiB,OAAOC,KAAI,SAACoC,EAAInC,GACpC,OAAQmC,EAAG,GAAK,GAAKH,IAAc,+BAC/B,oBAAI3C,UAAU,gBAAd,SAA+B8C,EAAG,KAClC,qBAAI9C,UAAW,iBAAmBmC,EAAlC,oBAAkDW,EAAG,GAAGlC,QAAQ,MAChE,oBAAIZ,UAAU,oBAAd,SAAmC4C,EAAQ,GAAKE,EAAG,GAAKF,EAAQ,KAAKhC,QAAQ,GAAK,IAClF,oBAAIZ,UAAU,gBAAd,SAA8B,wBAAQG,MAAO2C,EAAG,GAAIjC,QAASgC,EAA/B,sBAJUlC,MAOhD,+BACI,oBAAIX,UAAU,gBAAd,SAA8B,wCAC9B,oBAAIA,UAAW,iBAAmBmC,EAAlC,SAAyC,wCAAYS,EAAMhC,QAAQ,QACnE,oBAAIZ,UAAU,oBAAd,SAAmC4C,EAAQ,EAAI,IAAM,IACrD,oBAAI5C,UAAU,6BC5C/B,SAAS+C,EAAT,GAEqF,IADxFhC,EACuF,EADvFA,QAASvB,EAC8E,EAD9EA,QAASwD,EACqE,EADrEA,SAAUC,EAC2D,EAD3DA,YAAaC,EAC8C,EAD9CA,OAAQC,EACsC,EADtCA,UAAWd,EAC2B,EAD3BA,UAAWC,EACgB,EADhBA,YACvEC,EAAuF,EAAvFA,eAAgBC,EAAuE,EAAvEA,aAAcC,EAAyD,EAAzDA,gBAAiBC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,UAAWS,EAAe,EAAfA,aAGxE,SAASC,IACL,IAAIC,EAAQvC,EAAQwC,QAAO,SAAAjC,GAAK,OAAIA,EAAM5B,MAAQsD,GAAY1B,EAAM5B,MAAQwD,KAC5E,OAAKI,EAAMvB,OACIuB,EAAM5C,KAAI,SAAAY,GAAK,OAAIA,EAAMzB,OAASL,EAAQ8B,EAAM1B,WAAS4D,QAAO,SAAChC,EAAGiC,GAAJ,OAAUjC,EAAIiC,KADnE,EA4D9B,OACI,sBAAKzD,UAAU,WAAf,UACI,+CACA,uBAAO0D,QAAQ,OAAf,mBACA,uBAAOxD,KAAK,OAAOT,GAAG,OAAOU,MAAO6C,EAAU5C,SAAU,SAAAC,GAAC,OAAI4C,EAAY5C,EAAEC,OAAOH,UAClF,uBAAOuD,QAAQ,KAAf,iBACA,uBAAOxD,KAAK,OAAOT,GAAG,KAAKU,MAAO+C,EAAQ9C,SAAU,SAAAC,GAAC,OAAI8C,EAAU9C,EAAEC,OAAOH,UAC5E,uBAAOuD,QAAQ,QAAf,kCACA,uBAAOxD,KAAK,WAAWT,GAAG,QAAQkE,eAAgBhB,EAAWvC,SAZrE,SAAuBC,GACnB+C,GAAcT,MAYV,uBACA,4CACA,qBAAI3C,UAAWqD,IAAuB,EAAI,MAAQ,MAAlD,oBAAkEA,IAAqBzC,QAAQ,MAC/F,uBACA,wCACA,cAACsB,EAAD,CAAaC,MAAO,KAAMC,UArElC,WACI,IAAIwB,EAAU,EAGVC,EAAgB,GACpB,IAAK,IAAIjE,KAAUJ,EACS,IAApBA,EAAQI,KACRiE,EAAcjE,GAAU,GAKhC,IAAI0D,EAAQvC,EAAQwC,QAAO,SAAAjC,GAAK,OAAIA,EAAM5B,MAAQsD,GAAY1B,EAAM5B,MAAQwD,KAC5E,IAAKI,EAAMvB,OAAQ,MAAO,CAAC8B,EAAe,GAbnB,oBAgBLP,GAhBK,IAgBvB,2BAAyB,CAAC,IAAjBhC,EAAgB,QACjBA,EAAM1B,UAAUiE,IAChBA,EAAcvC,EAAM1B,SAAW0B,EAAMzB,OACrC+D,GAAWtC,EAAMzB,SAnBF,8BAsBvB,MAAO,CAACgE,EAAeD,IA+CmCvB,UAAWA,EACjEC,YAAaA,EAAaC,eAAgBA,EAAgBG,aAAcA,EAAcC,UAAWA,IACjG,uBACA,0CACA,cAACT,EAAD,CAAaC,MAAO,MAAOC,UA/CnC,WACI,IAAI0B,EAAW,EAGXC,EAAiB,GACrB,IAAK,IAAInE,KAAUJ,GACU,IAArBA,EAAQI,KACRmE,EAAenE,GAAU,GAKjC,IAAI0D,EAAQvC,EAAQwC,QAAO,SAAAjC,GAAK,OAAIA,EAAM5B,MAAQsD,GAAY1B,EAAM5B,MAAQwD,KAC5E,IAAKI,EAAMvB,OAAQ,MAAO,CAACgC,EAAgB,GAblB,oBAgBPT,GAhBO,IAgBzB,2BAAyB,CAAC,IAAjBhC,EAAgB,QACjBA,EAAM1B,UAAUmE,IAChBA,EAAezC,EAAM1B,SAAW0B,EAAMzB,OACtCiE,GAAYxC,EAAMzB,SAnBD,8BAsBzB,MAAO,CAACkE,EAAgBD,IAyBqCzB,UAAWA,EACpEG,aAAcA,EAAcC,gBAAiBA,EAAiBC,aAAcA,EAAcC,UAAWA,IACrG,uBACA,0BCuCGqB,MA5Hf,WAAe,IA4FOC,EA5FP,EAGiBC,mBAAS,IAH1B,mBAGNnD,EAHM,KAGGoD,EAHH,OAMiBD,mBAAS,CACrC,qBAAsB,EACtB,wBAAyB,IARd,mBAMN1E,EANM,KAMG4E,EANH,OAYWF,mBAAS,MAZpB,mBAYNxE,EAZM,KAYAsB,EAZA,OAayBkD,mBAAS,IAblC,mBAaNvE,EAbM,KAaOsB,EAbP,OAceiD,mBAAS,IAdxB,mBAcNtE,EAdM,KAcEsB,EAdF,OAeegD,mBAAS,IAfxB,mBAeNrE,EAfM,KAeEsB,EAfF,OAkByB+C,mBAAS,IAlBlC,mBAkBN5B,EAlBM,KAkBOC,EAlBP,OAmB2B2B,mBAAS,IAnBpC,mBAmBN1B,EAnBM,KAmBQC,EAnBR,KAsBP4B,EAAc,CAAC,IAsEDJ,GAtEgB,IAAIK,MAAOC,cAuEtCN,EAAO,MAAQ,GAAMA,EAAO,IAAM,GAAKA,EAAO,MAAQ,EAvEC,GAAK,IAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAtBhG,EAuBmBC,mBAAS,GAAD,QAAI,IAAII,MAAOC,cAAf,YAAgCC,QAAO,IAAIF,MAAOG,WAAa,GAAGC,SAAS,EAAG,KAA9E,QAvB3B,mBAuBN1B,EAvBM,KAuBIC,EAvBJ,OAwBeiB,mBAAS,GAAD,QAAI,IAAII,MAAOC,cAAf,YAAgCC,QAAO,IAAIF,MAAOG,WAAa,GAAGC,SAAS,EAAG,KAA9E,YAAsFL,GAAY,IAAIC,MAAOG,cAxBpI,mBAwBNvB,EAxBM,KAwBEC,EAxBF,OA2BqBe,oBAAS,GA3B9B,oBA2BNvB,GA3BM,MA2BKS,GA3BL,MA8Bb,SAAShC,GAAS1B,EAAMC,EAAaC,EAAQC,GAA0B,IAAlBJ,EAAiB,uDAAZ6E,KAAKK,MACxDjF,GAASC,GAAgBC,KAAUC,GAAU,KAGlDsE,GAAW,SAAAS,GAAI,MAAK,CAClB,CAACnF,GAAIA,EAAIC,KAAMA,EAAMC,YAAaA,EAAaC,OAAQA,EAAQC,OAAQA,IADrD,mBACiE+E,IAIpFnE,MAAK,SAACe,EAAGiC,GACR,OAAIjC,EAAE9B,KAAO+D,EAAE/D,KAAa,EACnB8B,EAAE9B,KAAO+D,EAAE/D,MAAc,EACtB+D,EAAEhE,GAAK+B,EAAE/B,SAIvBwB,EAAe,IACfC,EAAU,IACVC,EAAU,KAgDZ,OACE,sBAAKnB,UAAU,MAAf,UACE,gCACE,cAAC,IAAD,CAAS6E,GAAG,WAAWC,gBAAgB,SAAvC,qBAGA,cAAC,IAAD,CAASD,GAAG,YAAYC,gBAAgB,SAAxC,yBAIF,+BACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,IAAD,CAAUH,GAAG,eAEf,cAAC,IAAD,CAAOG,KAAK,WAAZ,SACE,cAACzD,EAAD,CAASR,QAASA,EAASvB,QAASA,EAASE,KAAMA,EAAMsB,QAASA,EAASrB,YAAaA,EAAasB,eAAgBA,EAAgBrB,OAAQA,EAAQsB,UAAWA,EAAWrB,OAAQA,EAAQsB,UAAWA,EAAWC,SAAUA,GAAUtB,YA5D/O,SAAqBL,GACnB0E,GAAW,SAAAS,GAAI,OAAIA,EAAKrB,QAAO,SAAAT,GAAE,OAAIA,EAAGrD,KAAOA,SA2DwNM,YAxDzQ,SAAqBN,EAAIC,EAAMC,EAAasF,EAAWpF,GACrDsE,GAAW,SAAAS,GAAI,OAAIA,EAAKrB,QAAO,SAAAjC,GAAK,OAAIA,EAAM7B,KAAOA,QACrD2B,GAAS1B,EAAMC,EAAasF,EAAWpF,EAAQJ,QAwDzC,cAAC,IAAD,CAAOuF,KAAK,YAAZ,SACE,cAACjC,EAAD,CAAUhC,QAASA,EAASvB,QAASA,EAASwD,SAAUA,EAAUC,YAAaA,EAAaC,OAAQA,EAAQC,UAAWA,EAAWd,UArD5I,SAAmB6C,EAAM/C,GAClB+C,KAGLA,EAAOA,EAAKjF,UAAU,EAAG,GAAGkF,cAAgBD,EAAKjF,UAAU,GAAGmF,iBAClD5F,EACV6F,MAAM,yBAGRjB,GAAW,SAAAQ,GAAI,kCAASA,GAAT,kBAAgBM,EAAO/C,SA4C0HG,YAAaA,EAAaC,eAAgBA,EAAgBC,aAAcA,EAAcC,gBAAiBA,EAAiBC,aAxC1R,SAAsBwC,GACpB,IAAII,EAAa/E,OAAOgF,OAAO,GAAI/F,GACnC,GAAa,uBAAT0F,GAA0C,yBAATA,EAArC,CAF0B,oBAMRnE,GANQ,IAM1B,2BAA2B,CACzB,GADyB,QACfnB,SAAWsF,EAEnB,YADAG,MAAM,6CARgB,qCAYnBC,EAAWJ,GAClBd,EAAWkB,QAVTD,MAAM,sCAqC4S1C,UAAWA,GAAWS,aAAcA,gBCnH5VoC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8a9432ba.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport function Entry({headers, id, date, description, header, amount, removeEntry, changeEntry}) {\r\n\r\n    function handleChangeHeader(e) {\r\n        changeEntry(id, date, description, e.target.value, amount);\r\n    }\r\n\r\n    function handleChangeDescription(e) {\r\n        changeEntry(id, date, e.target.value, header, amount);\r\n    }\r\n\r\n    function handleClick() {\r\n        removeEntry(id);\r\n    }\r\n    \r\n    return(\r\n            <tr className='Entry'>\r\n                <td className='column-date'>{date.substring(8,10) + '-' + date.substring(5, 7) + '-' + date.substring(0, 4)}</td>\r\n                <td className='column-description'><input type='text' value={description} onChange={handleChangeDescription}/></td>\r\n                <td className='column-header'><select value={header} onChange={handleChangeHeader}>\r\n                                <option key='-1' value=''></option>\r\n                                {Object.keys(headers).sort().map((header, i) => {\r\n                                    return <option key={i} value={header}>{header}</option>\r\n                                })}\r\n                            </select></td>\r\n                 <td className={headers[header] > 0 ? 'column-amount in' : 'column-amount out'}>&#8364; {amount.toFixed(2)}</td>\r\n                <td className='column-remove'><button onClick={handleClick}>&#215;</button></td>\r\n           </tr>\r\n     );\r\n}","import React from 'react';\r\nimport {Entry} from '../Entry/Entry';\r\n\r\nexport function EntryList({entries, headers, date, setDate, description, setDescription,\r\n    header, setHeader, amount, setAmount, addEntry, removeEntry, changeEntry}) {\r\n\r\n    function handleClick() {\r\n        addEntry(date, description, header, amount);\r\n    }\r\n\r\n    return (\r\n        <div className='EntryList'>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th className='column-date'>Date</th>\r\n                        <th className='column-description'>Description</th>\r\n                        <th className='column-header'>Header</th>\r\n                        <th className='column-amount'>Amount</th>\r\n                        <th className='column-remove'></th>\r\n                    </tr>\r\n               </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td className='column-date'><input type='date' onChange={e => setDate(e.target.value)} /></td>\r\n                        <td className='column-description'><input type='text' value={description} onChange={e => setDescription(e.target.value)}/></td>\r\n                        <td className='column-header'><select value={header} onChange={e => setHeader(e.target.value)}>\r\n                                <option key='-1' value=''></option>\r\n                                {Object.keys(headers).sort().map((header, i) => {\r\n                                    return <option key={i} value={header}>{header}</option>\r\n                                })}\r\n                            </select></td>\r\n                        <td className='column-amount'><input type='number' value={amount} onChange={e => setAmount(Number(e.target.value))}/></td>\r\n                        <td className='column-remove'><button onClick={handleClick}>+</button></td>\r\n                     </tr>\r\n                    {entries.map((entry, i) => {\r\n                        return <Entry key={i} headers={headers} id={entry.id} date={entry.date} description={entry.description} header={entry.header} amount={entry.amount} removeEntry={removeEntry} changeEntry={changeEntry}/>\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport {EntryList} from '../EntryList/EntryList';\r\n\r\nexport function Entries({entries, headers, date, setDate, description, setDescription, header, setHeader, amount, setAmount, addEntry, removeEntry, changeEntry}) {\r\n\r\n    //Read the data from a file selected by the user\r\n    async function importEntries(e) {\r\n        let file = e.target.files[0];\r\n        let textResponse = await file.text();\r\n        let lines = textResponse.split('\\n');\r\n        for (let i = 1; i < lines.length - 1; i++) {\r\n            let fields = lines[i].split(';');\r\n            let date = `${fields[0].substring(1, 5)}-${fields[0].substring(5, 7)}-${fields[0].substring(7, 9)}`\r\n            let description = fields[1].substring(1, fields[1].length - 1)\r\n            let header = fields[5] === '\"Bij\"' ? 'Unallocated income' : 'Unallocated expenses'\r\n            let amount = Number(fields[6].substring(1, fields[6].length - 1).replace(',','.'));\r\n            addEntry(date, description, header, amount)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='Entries'>\r\n            <h2>Import entries</h2>\r\n                <input type='file' onChange={importEntries}/>\r\n            <hr />\r\n            <h2>Entries</h2>\r\n            <EntryList entries={entries} headers={headers} date={date} setDate={setDate} description={description} setDescription={setDescription} header={header} setHeader={setHeader} amount={amount} setAmount={setAmount} addEntry={addEntry} removeEntry={removeEntry} changeEntry={changeEntry}/>\r\n            <hr />\r\n            <br />\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nexport function HeaderTable({inout, calculate, addHeader, newHeaderIn, setNewHeaderIn, newHeaderOut, setNewHeaderOut,\r\n    removeHeader, showEmpty}) {\r\n\r\n    let [headers, total] = calculate();\r\n\r\n    function handleAddClick() {\r\n        addHeader(inout === 'in' ? newHeaderIn : newHeaderOut, inout === 'in' ? 1 : -1)\r\n        inout === 'in' ? setNewHeaderIn('') : setNewHeaderOut('');\r\n    }\r\n\r\n    function handleRemoveClick(e) {\r\n        removeHeader(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className='Inout'>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th className='column-header'>Header</th>\r\n                        <th className='column-amount'>Amount</th>\r\n                        <th className='column-percentage'>%</th>\r\n                        <th className='column-remove'></th>\r\n                  </tr>\r\n               </thead>\r\n                <tbody>\r\n                <tr>\r\n                        <td className='column-header'><input type='text' value={inout === 'in' ? newHeaderIn : newHeaderOut} onChange={e => inout === 'in' ? setNewHeaderIn(e.target.value) : setNewHeaderOut(e.target.value)} /></td>\r\n                        <td className='column-amount'></td>\r\n                        <td className='column-percentage'></td>\r\n                        <td className='column-remove'><button onClick={handleAddClick}>+</button></td>\r\n\r\n                    </tr>\r\n                   {Object.entries(headers).sort().map((el, i) => {\r\n                        return (el[1] > 0 || showEmpty) && <tr key={i}>\r\n                            <td className='column-header'>{el[0]}</td>\r\n                            <td className={'column-amount ' + inout}>&#8364; {el[1].toFixed(2)}</td>\r\n                            <td className='column-percentage'>{total > 0 ? (el[1] / total * 100).toFixed(0) : 0}</td>\r\n                            <td className='column-remove'><button value={el[0]} onClick={handleRemoveClick}>&#215;</button></td>\r\n                       </tr>\r\n                      })}\r\n                    <tr>\r\n                        <td className='column-header'><b>Total</b></td>\r\n                        <td className={'column-amount ' + inout}><b>&#8364; {total.toFixed(2)}</b></td>\r\n                        <td className='column-percentage'>{total > 0 ? 100 : 0}</td>\r\n                        <th className='column-remove'></th>\r\n                  </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport {HeaderTable} from '../HeaderTable/HeaderTable';\r\n\r\nexport function Analysis({\r\n    entries, headers, fromDate, setFromDate, toDate, setToDate, addHeader, newHeaderIn,\r\n    setNewHeaderIn, newHeaderOut, setNewHeaderOut, removeHeader, showEmpty, setShowEmpty}) {\r\n\r\n    //Calculates the net result of income and expenses in the selected period\r\n    function calculateNetResult() {\r\n        let array = entries.filter(entry => entry.date >= fromDate && entry.date <= toDate);\r\n        if (!array.length) return 0;\r\n        return array = array.map(entry => entry.amount * headers[entry.header]).reduce((a, b) => a + b);\r\n    }\r\n\r\n    //Calculates the total income and the income for each header separately, in the selected time period\r\n    function calculateIncome() {\r\n        let totalIn = 0;\r\n         \r\n        //Filter the income headers\r\n        let incomeHeaders = {};\r\n        for (let header in headers) {\r\n            if (headers[header] === 1) {\r\n                incomeHeaders[header] = 0;\r\n            }\r\n        }\r\n\r\n        //Filter entries in selected time period\r\n        let array = entries.filter(entry => entry.date >= fromDate && entry.date <= toDate);\r\n        if (!array.length) return [incomeHeaders, 0];\r\n\r\n        //For each entry, check if header is in income headers. If so, update the amount for that header and the total amount\r\n        for (let entry of array) {\r\n            if (entry.header in incomeHeaders) {\r\n                incomeHeaders[entry.header] += entry.amount;\r\n                totalIn += entry.amount;\r\n            }\r\n         }\r\n        return [incomeHeaders, totalIn];\r\n    }\r\n\r\n    //Calculates the total expenses and the expenses for each header separately, in the selected time period\r\n    function calculateExpenses() {\r\n        let totalOut = 0;\r\n\r\n        //Filter the expense headers\r\n        let expenseHeaders = {};\r\n        for (let header in headers) {\r\n            if (headers[header] === -1) {\r\n                expenseHeaders[header] = 0;\r\n            }\r\n        }\r\n\r\n        //Filter entries in selected time period\r\n        let array = entries.filter(entry => entry.date >= fromDate && entry.date <= toDate);\r\n        if (!array.length) return [expenseHeaders, 0];\r\n\r\n        //For each entry, check if header is in expense headers. If so, update the amount for that header and the total amount\r\n        for (let entry of array) {\r\n            if (entry.header in expenseHeaders) {\r\n                expenseHeaders[entry.header] += entry.amount;\r\n                totalOut += entry.amount;\r\n            }\r\n         }\r\n        return [expenseHeaders, totalOut];\r\n    }\r\n\r\n    function toggleChecked(e) {\r\n        setShowEmpty(!showEmpty);\r\n    }\r\n\r\n    return (\r\n        <div className='Analysis'>\r\n            <h2>Select period</h2>\r\n            <label htmlFor='from'>From:</label>\r\n            <input type='date' id='from' value={fromDate} onChange={e => setFromDate(e.target.value)}/>\r\n            <label htmlFor='to'>To:</label>\r\n            <input type='date' id='to' value={toDate} onChange={e => setToDate(e.target.value)}/>\r\n            <label htmlFor='empty'>Show empty headers: </label>\r\n            <input type='checkbox' id='empty' defaultChecked={showEmpty} onChange={toggleChecked}/>\r\n            <hr />\r\n            <h2>Net result</h2>\r\n            <h3 className={calculateNetResult() < 0 ? 'neg' : 'pos'}>&#8364; {calculateNetResult().toFixed(2)}</h3>\r\n            <hr />\r\n            <h2>Income</h2>\r\n            <HeaderTable inout={'in'} calculate={calculateIncome} addHeader={addHeader} \r\n            newHeaderIn={newHeaderIn} setNewHeaderIn={setNewHeaderIn} removeHeader={removeHeader} showEmpty={showEmpty}/>\r\n            <hr />\r\n            <h2>Expenses</h2>\r\n            <HeaderTable inout={'out'} calculate={calculateExpenses} addHeader={addHeader}\r\n            newHeaderOut={newHeaderOut} setNewHeaderOut={setNewHeaderOut} removeHeader={removeHeader} showEmpty={showEmpty}/>\r\n            <hr />\r\n            <br />\r\n       </div>\r\n    );\r\n}\r\n","import './App.css';\nimport React, {useState} from 'react';\nimport {Switch, Route, Redirect, NavLink} from 'react-router-dom';\nimport {Entries} from './components/Entries/Entries';\nimport {Analysis} from './components/Analysis/Analysis';\n\nfunction App() {\n\n  //Hold the entries\n  const [entries, setEntries] = useState([]);\n\n  //Hold the headers\n  const [headers, setHeaders] = useState({\n    'Unallocated income': 1,\n    'Unallocated expenses': -1\n  });\n\n  //Hold the data for a new entry\n  const [date, setDate] = useState(null);\n  const [description, setDescription] = useState('');\n  const [header, setHeader] = useState('');\n  const [amount, setAmount] = useState('');\n\n  //Hold the data for a new header\n  const [newHeaderIn, setNewHeaderIn] = useState('');\n  const [newHeaderOut, setNewHeaderOut] = useState('');\n\n  //Initialize the correct month and hold the data for the selected time period\n  const daysInMonth = [31, isLeapYear(new Date().getFullYear()) ? 29 : 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n  const [fromDate, setFromDate] = useState(`${new Date().getFullYear()}-${String(new Date().getMonth() + 1).padStart(2, '0')}-01`)\n  const [toDate, setToDate] = useState(`${new Date().getFullYear()}-${String(new Date().getMonth() + 1).padStart(2, '0')}-${daysInMonth[new Date().getMonth()]}`);\n\n  //Hold data for checkbox\n  const [showEmpty, setShowEmpty] = useState(true);\n  \n  //Add an entry to the list\n  function addEntry(date, description, header, amount, id = Date.now()) {\n    if (!date || !description || !header || amount <= 0) {\n      return;\n    }\n    setEntries(prev => ([\n      {id: id, date: date, description: description, header: header, amount: amount}, ...prev\n    ]\n    \n    //Sort the new list\n    .sort((a, b) => {\n      if (a.date < b.date) return 1;\n      else if (a.date > b.date) return -1;\n      else return b.id - a.id;\n    })));\n\n    //Reset the data fields\n    setDescription('');\n    setHeader('');\n    setAmount('');\n  }\n\n  //Remove entry from the list\n  function removeEntry(id) {\n    setEntries(prev => prev.filter(el => el.id !== id))\n  }\n\n  function changeEntry(id, date, description, newHeader, amount) {\n    setEntries(prev => prev.filter(entry => entry.id !== id));\n    addEntry(date, description, newHeader, amount, id);\n  }\n\n  //Add header if it's not already in the list. First letter should be uppercase with the rest lowercase.\n  function addHeader(name, inout) {\n    if (!name) {\n      return;\n    }\n    name = name.substring(0, 1).toUpperCase() + name.substring(1).toLowerCase()\n    if (name in headers) {\n      alert('Header already exists')\n      return;\n    }\n    setHeaders(prev => ({...prev, [name]: inout}));\n   }\n\n  //Remove header if it is not a default header and if there are no more entries with that header\n  function removeHeader(name) {\n    let newHeaders = Object.assign({}, headers)\n    if (name === 'Unallocated income' || name === 'Unallocated expenses') {\n      alert('You cannot delete default headers')\n      return;\n    }\n    for (let entry of entries) {\n      if (entry.header === name) {\n        alert('There are still entries with that header');\n        return;\n      }\n    }\n    delete newHeaders[name];\n    setHeaders(newHeaders);\n  }\n\n  //Check whether the current year is a leap year\n  function isLeapYear(year) {\n    return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0)\n  }\n\n  return (\n    <div className=\"App\">\n      <nav>\n        <NavLink to='/entries' activeClassName='active'>\n          Entries\n        </NavLink>\n        <NavLink to='/analysis' activeClassName='active'>\n          Analysis\n        </NavLink>\n      </nav>\n      <main>\n        <Switch>\n          <Route exact path='/'>\n            <Redirect to='/entries' />\n          </Route>\n          <Route path='/entries'>\n            <Entries entries={entries} headers={headers} date={date} setDate={setDate} description={description} setDescription={setDescription} header={header} setHeader={setHeader} amount={amount} setAmount={setAmount} addEntry={addEntry} removeEntry={removeEntry} changeEntry={changeEntry}/>\n          </Route>\n          <Route path='/analysis'>\n            <Analysis entries={entries} headers={headers} fromDate={fromDate} setFromDate={setFromDate} toDate={toDate} setToDate={setToDate} addHeader={addHeader} newHeaderIn={newHeaderIn} setNewHeaderIn={setNewHeaderIn} newHeaderOut={newHeaderOut} setNewHeaderOut={setNewHeaderOut} removeHeader={removeHeader} showEmpty={showEmpty} setShowEmpty={setShowEmpty}/>\n          </Route>\n        </Switch>\n      </main>\n     \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter as Router} from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}