{"version":3,"sources":["components/Import/Import.js","components/Filter/Filter.js","components/Transaction/Transaction.js","components/List/List.js","components/Transactions/Transactions.js","components/HeaderTable/HeaderTable.js","components/Overview/Overview.js","App.js","index.js"],"names":["Import","lang","inputField","importTransactions","className","type","id","ref","onClick","Filter","headers","showCorrectHeader","filterFromDate","setFilterFromDate","filterToDate","setFilterToDate","filterDescription","setFilterDescription","setFilterHeaders","filterFromAmount","setFilterFromAmount","filterToAmount","setFilterToAmount","resetFilter","htmlFor","value","onChange","e","target","name","multiple","Array","from","options","filter","option","selected","map","Object","keys","sort","header","i","Transaction","date","description","amount","removeTransaction","changeTransaction","substring","toFixed","List","transactions","setDate","setDescription","setHeader","setAmount","addTransaction","maxItemsOnPage","setMaxItemsOnPage","itemsOnPage","Math","min","length","Number","transaction","prev","Transactions","useRef","filteredTransactions","current","useState","filterHeaders","a","file","files","text","textResponse","lines","split","fields","replace","alert","el","RegExp","test","includes","HeaderTable","inout","calculate","addHeader","newHeaderIn","setNewHeaderIn","newHeaderOut","setNewHeaderOut","removeHeader","showEmpty","total","handleRemoveClick","entries","Overview","fromDate","setFromDate","toDate","setToDate","setShowEmpty","calculateNetResult","array","reduce","b","checked","console","log","totalIn","incomeHeaders","totalOut","expenseHeaders","App","year","setTransactions","setHeaders","daysInMonth","Date","getFullYear","String","getMonth","padStart","setLang","handleLangChange","now","to","activeClassName","exact","path","newHeader","toUpperCase","toLowerCase","newHeaders","assign","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b7d839ce.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport function Import({lang, inputField, importTransactions}) {\r\n    return (\r\n        <div className='Import'>\r\n            <h2>{lang === 'en' ? 'Import' : 'Importeer'}</h2>\r\n            <input type='file' id='import' ref={inputField} />\r\n            <button id='import' onClick={importTransactions}>{lang === 'en' ? 'Import' : 'Importeer'}</button>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport function Filter({lang, headers, showCorrectHeader, filterFromDate, setFilterFromDate,\r\n     filterToDate, setFilterToDate, filterDescription, setFilterDescription,\r\n     setFilterHeaders, filterFromAmount, setFilterFromAmount, filterToAmount, setFilterToAmount, resetFilter}) {\r\n\r\n    return (\r\n        <div className='Filter'>\r\n        <h2>Filter</h2>\r\n        <table>\r\n            <tbody>\r\n                <tr>\r\n                    <td><label htmlFor='fromdate'>{lang === 'en' ? 'From:  ' : 'Van: '}</label></td>\r\n                    <td><input type='date' value={filterFromDate} id='fromdate' onChange={e => setFilterFromDate(e.target.value)}></input></td>\r\n                    <td><label htmlFor='todate'>{lang === 'en' ? 'To: ' : 'Tot: '}</label></td>\r\n                    <td><input type='date' value={filterToDate} id='todate' onChange={e => setFilterToDate(e.target.value)}></input></td>\r\n                </tr>\r\n                <tr>\r\n                    <td><label htmlFor='description'>{lang === 'en' ? 'Description: ' : 'Omschrijving: '}</label></td>\r\n                    <td><input type='text' id='description' value={filterDescription} onChange={e => setFilterDescription(e.target.value)}/></td>\r\n                    <td><label htmlFor='headers'>{lang === 'en' ? 'Headers: ' : 'Rubrieken: '}</label></td>\r\n                    <td>\r\n                        <select id='headers' name='headers' multiple onChange={e => setFilterHeaders(Array.from(e.target.options).filter(option => option.selected).map(option => option.value))}>\r\n                        {Object.keys(headers).sort().map((header, i) => {\r\n                            return <option key={i} value={header}>{showCorrectHeader(header)}</option>\r\n                        })}\r\n                        </select>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td><label htmlFor='fromamount'>{lang === 'en' ? 'From amount: ' : 'Vanaf bedrag: '}</label></td>\r\n                    <td><input type='number' id='fromamount' value={filterFromAmount} onChange={e => setFilterFromAmount(e.target.value)}></input></td>\r\n                    <td><label htmlFor='toamount'>{lang === 'en' ? 'To amount: ' : 'Tot bedrag: '}</label></td>\r\n                    <td><input type='number' id='toamount' value={filterToAmount} onChange={e => setFilterToAmount(e.target.value)}></input></td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n        <br />\r\n        <button onClick={resetFilter}>Reset filter</button>\r\n    </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport function Transaction({headers, showCorrectHeader, id, date, description, header, amount, removeTransaction, changeTransaction, lang}) {\r\n\r\n    function handleChangeHeader(e) {\r\n        changeTransaction(id, date, description, e.target.value, amount);\r\n    }\r\n\r\n    function handleChangeDescription(e) {\r\n        changeTransaction(id, date, e.target.value, header, amount);\r\n    }\r\n\r\n    function handleClick() {\r\n        removeTransaction(id);\r\n    }\r\n\r\n    return(\r\n            <tr className='Transaction'>\r\n                <td className='column-date'>{date.substring(8,10) + '-' + date.substring(5, 7) + '-' + date.substring(0, 4)}</td>\r\n                <td className='column-description'><input type='text' value={description} onChange={handleChangeDescription}/></td>\r\n                <td className='column-header'><select value={header} onChange={handleChangeHeader}>\r\n                                <option key='-1' value=''></option>\r\n                                {Object.keys(headers).sort().map((header, i) => {\r\n                                    return <option key={i} value={header}>{showCorrectHeader(header)}</option>\r\n                                })}\r\n                            </select></td>\r\n                 <td className={headers[header] > 0 ? 'column-amount in' : 'column-amount out'}>&#8364; {amount.toFixed(2)}</td>\r\n                <td className='column-remove'><button onClick={handleClick}>&#215;</button></td>\r\n           </tr>\r\n     );\r\n}","import React from 'react';\r\nimport {Transaction} from '../Transaction/Transaction';\r\n\r\nexport function List({transactions, headers, showCorrectHeader, date, setDate, description, setDescription, header, setHeader,\r\n    amount, setAmount, addTransaction, removeTransaction, changeTransaction, lang, maxItemsOnPage, setMaxItemsOnPage}) {\r\n\r\n    let itemsOnPage = 0;\r\n\r\n    function handleClick() {\r\n        addTransaction(date, description, header, amount);\r\n    }\r\n\r\n    function showMoreItems() {\r\n        setMaxItemsOnPage(prev => prev + 50);\r\n    }\r\n    \r\n    return (\r\n        <div className='List'>\r\n           <h2>{lang === 'en' ? 'List' : 'Lijst'}</h2>\r\n            <p>{lang === 'en' ? `Showing ${Math.min(maxItemsOnPage, transactions.length)} of ${transactions.length} transactions` : `${Math.min(maxItemsOnPage, transactions.length)} van ${transactions.length} transacties tonend`}</p>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th className='column-date'>{lang === 'en' ? 'Date' : 'Datum'}</th>\r\n                        <th className='column-description'>{lang === 'en' ? 'Description' : 'Omschrijving' }</th>\r\n                        <th className='column-header'>{lang === 'en' ? 'Header' : 'Rubriek'}</th>\r\n                        <th className='column-amount'>{lang === 'en' ? 'Amount' : 'Bedrag'}</th>\r\n                        <th className='column-remove'></th>\r\n                    </tr>\r\n               </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td className='column-date'><input type='date' onChange={e => setDate(e.target.value)} /></td>\r\n                        <td className='column-description'><input type='text' value={description} onChange={e => setDescription(e.target.value)}/></td>\r\n                        <td className='column-header'><select value={header} onChange={e => setHeader(e.target.value)}>\r\n                                <option key='-1' value=''></option>\r\n                                {Object.keys(headers).sort().map((header, i) => {\r\n                                    return <option key={i} value={header}>{showCorrectHeader(header)}</option>\r\n                                })}\r\n                            </select></td>\r\n                        <td className='column-amount'><input type='number' value={amount} onChange={e => setAmount(Number(e.target.value))}/></td>\r\n                        <td className='column-remove'><button onClick={handleClick}>+</button></td>\r\n                     </tr>\r\n                    {transactions.map((transaction, i) => {\r\n                        itemsOnPage++;\r\n                        return itemsOnPage <= maxItemsOnPage && <Transaction key={i} headers={headers} showCorrectHeader={showCorrectHeader} id={transaction.id} date={transaction.date} description={transaction.description} header={transaction.header} amount={transaction.amount} removeTransaction={removeTransaction} changeTransaction={changeTransaction} lang={lang}/>\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n                <button className={maxItemsOnPage < transactions.length ? 'show-more-button show' : 'show-more-button hide'} onClick={showMoreItems}>{lang === 'en' ? 'Show more' : 'Toon meer'}</button>\r\n        </div>\r\n    );\r\n}","import React, {useRef, useState} from 'react';\r\nimport {Import} from '../Import/Import';\r\nimport {Filter} from '../Filter/Filter';\r\nimport {List} from '../List/List';\r\n\r\nexport function Transactions({transactions, headers, showCorrectHeader, date, setDate, description, setDescription, header, setHeader,\r\n    amount, setAmount, addTransaction, removeTransaction, changeTransaction, lang, maxItemsOnPage, setMaxItemsOnPage}) {\r\n\r\n    const inputField = useRef(null);\r\n    \r\n    //Hold the filtered transactions\r\n    let filteredTransactions = useRef();\r\n    filteredTransactions.current = transactions;\r\n\r\n    const [filterFromDate, setFilterFromDate] = useState();\r\n    const [filterToDate, setFilterToDate] = useState('');\r\n    const [filterDescription, setFilterDescription] = useState('');\r\n    const [filterHeaders, setFilterHeaders] = useState([]);\r\n    const [filterFromAmount, setFilterFromAmount] = useState(0);\r\n    const [filterToAmount, setFilterToAmount] = useState(0);\r\n\r\n    //Read the data from a file selected by the user\r\n    async function importTransactions(e) {\r\n        try {\r\n            let file = inputField.current.files[0];\r\n            inputField.current.value = null;\r\n            let textResponse = await file.text();\r\n            let lines = textResponse.split('\\n');\r\n            for (let i = 1; i < lines.length - 1; i++) {\r\n                let fields = lines[i].split(';');\r\n                let date = `${fields[0].substring(1, 5)}-${fields[0].substring(5, 7)}-${fields[0].substring(7, 9)}`\r\n                let description = fields[1].substring(1, fields[1].length - 1)\r\n                let header = fields[5] === '\"Bij\"' ? 'Unallocated income' : 'Unallocated expenses'\r\n                let amount = Number(fields[6].substring(1, fields[6].length - 1).replace(',','.'));\r\n                addTransaction(date, description, header, amount)\r\n            }\r\n        } catch (e) {\r\n            alert('An error occured while trying to read this file')\r\n        }\r\n     }\r\n\r\n    //Reset the filter\r\n    function resetFilter() {\r\n        setFilterFromDate('');\r\n        setFilterToDate('');\r\n        setFilterDescription('');\r\n        setFilterHeaders([]);\r\n        setFilterFromAmount(0);\r\n        setFilterToAmount(0);\r\n    }\r\n\r\n    //Filter transactions according to the set filters\r\n    filteredTransactions.current = transactions;\r\n\r\n    if (filterFromDate) {\r\n        filteredTransactions.current = filteredTransactions.current.filter(el => el.date >= filterFromDate);\r\n    }\r\n    if (filterToDate) {\r\n        filteredTransactions.current = filteredTransactions.current.filter(el => el.date <= filterToDate);\r\n    }\r\n    if (filterDescription) {\r\n        filteredTransactions.current = filteredTransactions.current.filter(el => RegExp(filterDescription, 'gi').test(el.description));\r\n    }\r\n    if (filterHeaders.length) {\r\n        filteredTransactions.current = filteredTransactions.current.filter(el => filterHeaders.includes(el.header))\r\n    }\r\n    if (filterFromAmount) {\r\n        filteredTransactions.current = filteredTransactions.current.filter(el => el.amount >= filterFromAmount);\r\n    }\r\n    if (filterToAmount) {\r\n        filteredTransactions.current = filteredTransactions.current.filter(el => el.amount <= filterToAmount);\r\n    }\r\n\r\n    return (\r\n        <div className='Transactions'>\r\n            <Import lang={lang} inputField={inputField} importTransactions={importTransactions}/>\r\n            <br />\r\n            <hr />\r\n            <Filter lang={lang} headers={headers} showCorrectHeader={showCorrectHeader} filterFromDate={filterFromDate} setFilterFromDate={setFilterFromDate} filterToDate={filterToDate} setFilterToDate={setFilterToDate} filterDescription={filterDescription} setFilterDescription={setFilterDescription} setFilterHeaders={setFilterHeaders} filterFromAmount={filterFromAmount} setFilterFromAmount={setFilterFromAmount} filterToAmount={filterToAmount} setFilterToAmount={setFilterToAmount} resetFilter={resetFilter}/>\r\n            <br />\r\n            <hr />\r\n            <List transactions={filteredTransactions.current} headers={headers} showCorrectHeader={showCorrectHeader} date={date} setDate={setDate} description={description} setDescription={setDescription} header={header} setHeader={setHeader} amount={amount} setAmount={setAmount} addTransaction={addTransaction} removeTransaction={removeTransaction} changeTransaction={changeTransaction} lang={lang} maxItemsOnPage={maxItemsOnPage} setMaxItemsOnPage={setMaxItemsOnPage}/>\r\n            <br />\r\n            <hr />\r\n            <br />\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nexport function HeaderTable({inout, calculate, showCorrectHeader, addHeader,\r\n    newHeaderIn, setNewHeaderIn, newHeaderOut, setNewHeaderOut, removeHeader, showEmpty, lang}) {\r\n\r\n    let [headers, total] = calculate();\r\n\r\n    function handleAddClick() {\r\n        addHeader(inout === 'in' ? newHeaderIn : newHeaderOut, inout === 'in' ? 1 : -1)\r\n        inout === 'in' ? setNewHeaderIn('') : setNewHeaderOut('');\r\n    }\r\n\r\n    function handleRemoveClick(e) {\r\n        removeHeader(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className='Headertable'>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th className='column-header'>{lang === 'en' ? 'Header' : 'Rubriek'}</th>\r\n                        <th className='column-amount'>{lang === 'en' ? 'Amount' : 'Bedrag'}</th>\r\n                        <th className='column-percentage'>%</th>\r\n                        <th className='column-remove'></th>\r\n                  </tr>\r\n               </thead>\r\n                <tbody>\r\n                <tr>\r\n                        <td className='column-header'><input type='text' value={inout === 'in' ? newHeaderIn : newHeaderOut} onChange={e => inout === 'in' ? setNewHeaderIn(e.target.value) : setNewHeaderOut(e.target.value)} /></td>\r\n                        <td className='column-amount'></td>\r\n                        <td className='column-percentage'></td>\r\n                        <td className='column-remove'><button onClick={handleAddClick}>+</button></td>\r\n\r\n                    </tr>\r\n                   {Object.entries(headers).sort().map((el, i) => {\r\n                        return (el[1] > 0 || showEmpty) && <tr key={i}>\r\n                            <td className='column-header'>{showCorrectHeader(el[0])}</td>\r\n                            <td className={'column-amount ' + inout}>&#8364; {el[1].toFixed(2)}</td>\r\n                            <td className='column-percentage'>{total > 0 ? (el[1] / total * 100).toFixed(0) : 0}</td>\r\n                            <td className='column-remove'><button value={el[0]} onClick={handleRemoveClick}>&#215;</button></td>\r\n                       </tr>\r\n                      })}\r\n                    <tr>\r\n                        <td className='column-header'><b>{lang === 'en' ? 'Total' : 'Totaal'}</b></td>\r\n                        <td className={'column-amount ' + inout}><b>&#8364; {total.toFixed(2)}</b></td>\r\n                        <td className='column-percentage'>{total > 0 ? 100 : 0}</td>\r\n                        <th className='column-remove'></th>\r\n                  </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport {HeaderTable} from '../HeaderTable/HeaderTable';\r\n\r\nexport function Overview({\r\n    transactions, headers, showCorrectHeader, fromDate, setFromDate, toDate, setToDate, addHeader, newHeaderIn,\r\n    setNewHeaderIn, newHeaderOut, setNewHeaderOut, removeHeader, showEmpty, setShowEmpty, lang}) {\r\n\r\n    function handleChange(e) {\r\n        console.log(e.target.value);\r\n        setShowEmpty(e.target.value === 'true' ? false : true);\r\n    }\r\n\r\n    //Calculates the net result of income and expenses in the selected period\r\n    function calculateNetResult() {\r\n        let array = transactions.filter(transaction => transaction.date >= fromDate && transaction.date <= toDate);\r\n        if (!array.length) return 0;\r\n        return array = array.map(transaction => transaction.amount * headers[transaction.header]).reduce((a, b) => a + b);\r\n    }\r\n\r\n    //Calculates the total income and the income for each header separately, in the selected time period\r\n    function calculateIncome() {\r\n        let totalIn = 0;\r\n         \r\n        //Filter the income headers\r\n        let incomeHeaders = {};\r\n        for (let header in headers) {\r\n            if (headers[header] === 1) {\r\n                incomeHeaders[header] = 0;\r\n            }\r\n        }\r\n\r\n        //Filter transactions in selected time period\r\n        let array = transactions.filter(transaction => transaction.date >= fromDate && transaction.date <= toDate);\r\n        if (!array.length) return [incomeHeaders, 0];\r\n\r\n        //For each transaction, check if header is in income headers. If so, update the amount for that header and the total amount\r\n        for (let transaction of array) {\r\n            if (transaction.header in incomeHeaders) {\r\n                incomeHeaders[transaction.header] += transaction.amount;\r\n                totalIn += transaction.amount;\r\n            }\r\n         }\r\n        return [incomeHeaders, totalIn];\r\n    }\r\n\r\n    //Calculates the total expenses and the expenses for each header separately, in the selected time period\r\n    function calculateExpenses() {\r\n        let totalOut = 0;\r\n\r\n        //Filter the expense headers\r\n        let expenseHeaders = {};\r\n        for (let header in headers) {\r\n            if (headers[header] === -1) {\r\n                expenseHeaders[header] = 0;\r\n            }\r\n        }\r\n\r\n        //Filter transactions in selected time period\r\n        let array = transactions.filter(transaction => transaction.date >= fromDate && transaction.date <= toDate);\r\n        if (!array.length) return [expenseHeaders, 0];\r\n\r\n        //For each transaction, check if header is in expense headers. If so, update the amount for that header and the total amount\r\n        for (let transaction of array) {\r\n            if (transaction.header in expenseHeaders) {\r\n                expenseHeaders[transaction.header] += transaction.amount;\r\n                totalOut += transaction.amount;\r\n            }\r\n         }\r\n        return [expenseHeaders, totalOut];\r\n    }\r\n\r\n    return (\r\n        <div className='Overview'>\r\n            <h2>{lang === 'en' ? 'Period' : 'Periode'}</h2>\r\n            <label htmlFor='from'>{lang === 'en' ? 'From' : 'Van'}:</label>\r\n            <input type='date' id='from' value={fromDate} onChange={e => setFromDate(e.target.value)}/>\r\n            <label htmlFor='to'>{lang === 'en' ? 'To' : 'Tot'}:</label>\r\n            <input type='date' id='to' value={toDate} onChange={e => setToDate(e.target.value)}/>\r\n            <input type='checkbox' id='empty' value={showEmpty} checked={showEmpty} onChange={handleChange}></input>\r\n            <label htmlFor='empty'>{lang === 'en' ? 'Show empty headers' : 'Toon lege rubrieken'}</label>\r\n            <br />\r\n            <hr />\r\n            <h2>{lang === 'en' ? 'Net result' : 'Netto resultaat'}</h2>\r\n            <h3 className={calculateNetResult() < 0 ? 'neg' : 'pos'}>&#8364; {calculateNetResult().toFixed(2)}</h3>\r\n            <br />\r\n            <hr />\r\n            <h2>{lang === 'en' ? 'Income' : 'inkomsten'}</h2>\r\n            <HeaderTable inout={'in'} calculate={calculateIncome} showCorrectHeader={showCorrectHeader} addHeader={addHeader} \r\n            newHeaderIn={newHeaderIn} setNewHeaderIn={setNewHeaderIn} removeHeader={removeHeader} showEmpty={showEmpty} lang={lang}/>\r\n            <br />\r\n            <hr />\r\n            <h2>{lang === 'en' ? 'Expenses' : 'Uitgaven'}</h2>\r\n            <HeaderTable inout={'out'} calculate={calculateExpenses} showCorrectHeader={showCorrectHeader} addHeader={addHeader}\r\n            newHeaderOut={newHeaderOut} setNewHeaderOut={setNewHeaderOut} removeHeader={removeHeader} showEmpty={showEmpty} lang={lang} />\r\n            <br />\r\n            <hr />\r\n            <br />\r\n       </div>\r\n    );\r\n}\r\n","import './App.css';\r\nimport React, {useState} from 'react';\r\nimport {Switch, Route, Redirect, NavLink} from 'react-router-dom';\r\nimport {Transactions} from './components/Transactions/Transactions';\r\nimport {Overview} from './components/Overview/Overview';\r\n\r\nfunction App() {\r\n\r\n  //Hold the transactions\r\n  const [transactions, setTransactions] = useState([]);\r\n  \r\n  //Hold the headers\r\n  const [headers, setHeaders] = useState({'Unallocated income': 1, 'Unallocated expenses': -1});\r\n\r\n  //Hold the data for a new transaction\r\n  const [date, setDate] = useState(null);\r\n  const [description, setDescription] = useState('');\r\n  const [header, setHeader] = useState('');\r\n  const [amount, setAmount] = useState('');\r\n\r\n  //Hold the data for a new header\r\n  const [newHeaderIn, setNewHeaderIn] = useState('');\r\n  const [newHeaderOut, setNewHeaderOut] = useState('');\r\n\r\n  //Hold the data for transactions on page\r\n  const [maxItemsOnPage, setMaxItemsOnPage] = useState(50);\r\n \r\n  //Initialize the correct month and hold the data for the selected time period\r\n  const daysInMonth = [31, isLeapYear(new Date().getFullYear()) ? 29 : 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n  const [fromDate, setFromDate] = useState(`${new Date().getFullYear()}-${String(new Date().getMonth() + 1).padStart(2, '0')}-01`)\r\n  const [toDate, setToDate] = useState(`${new Date().getFullYear()}-${String(new Date().getMonth() + 1).padStart(2, '0')}-${daysInMonth[new Date().getMonth()]}`);\r\n\r\n  //Options\r\n  const [lang, setLang] = useState('en');\r\n  const [showEmpty, setShowEmpty] = useState(true);\r\n  \r\n  //Change the language\r\n  function handleLangChange(e) {\r\n    setLang(e.target.value);\r\n}\r\n  //Add an transaction to the list\r\n  function addTransaction(date, description, header, amount, id = Date.now()) {\r\n    if (!date || !description || !header || amount <= 0) {\r\n      alert(lang === 'en' ? 'You must specify all fields and a minumum amount of 0.01' : 'Alle velden dienen ingevuld te worden en het minimumbedrag is 0.01');\r\n      return;\r\n    }\r\n    setTransactions(prev => ([\r\n      {id: id, date: date, description: description, header: header, amount: amount}, ...prev\r\n    ]\r\n    \r\n    //Sort the new list\r\n    .sort((a, b) => {\r\n      if (a.date < b.date) return 1;\r\n      else if (a.date > b.date) return -1;\r\n      else return b.id - a.id;\r\n    })));\r\n\r\n    //Reset the data fields\r\n    setDescription('');\r\n    setHeader('');\r\n    setAmount('');\r\n  }\r\n\r\n  //Remove transaction from the list\r\n  function removeTransaction(id) {\r\n    setTransactions(prev => prev.filter(el => el.id !== id))\r\n  }\r\n\r\n  //Change transaction\r\n  function changeTransaction(id, date, description, newHeader, amount) {\r\n    setTransactions(prev => prev.filter(transaction => transaction.id !== id));\r\n    addTransaction(date, description, newHeader, amount, id);\r\n  }\r\n\r\n  //Add header if it's not already in the list. First letter should be uppercase with the rest lowercase.\r\n  function addHeader(name, inout) {\r\n    if (!name) {\r\n      return;\r\n    }\r\n    name = name.substring(0, 1).toUpperCase() + name.substring(1).toLowerCase()\r\n    if (name in headers) {\r\n      alert(lang === 'en' ? 'Header already exists' : 'Rubriek bestaat al');\r\n      return;\r\n    }\r\n    setHeaders(prev => ({...prev, [name]: inout}));\r\n   }\r\n\r\n  //Remove header if it is not a default header and if there are no more transactions with that header\r\n  function removeHeader(name) {\r\n    let newHeaders = Object.assign({}, headers)\r\n    if (name === 'Unallocated income' || name === 'Unallocated expenses') {\r\n      alert(lang === 'en' ? 'You cannot delete default headers' : 'Standaardrubrieken kunnen niet verwijderd worden');\r\n      return;\r\n    }\r\n    for (let transaction of transactions) {\r\n      if (transaction.header === name) {\r\n        alert(lang === 'en' ? 'There are still transactions with that header' : 'Er zijn nog transacties in die rubriek');\r\n        return;\r\n      }\r\n    }\r\n    delete newHeaders[name];\r\n    setHeaders(newHeaders);\r\n  }\r\n\r\n  function showCorrectHeader(header) {\r\n    if (lang === 'nl' && header === 'Unallocated income') {\r\n        return 'Ongerubriceerde inkomsten';\r\n    }\r\n    else if (lang === 'nl' && header === 'Unallocated expenses') {\r\n        return 'Ongerubriceerde uitgaven';\r\n    }\r\n    else {\r\n        return header;\r\n    }\r\n  }\r\n\r\n  //Check whether the current year is a leap year\r\n  function isLeapYear(year) {\r\n    return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0)\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <nav>\r\n        <NavLink to='/transactions' activeClassName='active'>\r\n          {lang === 'en' ? 'Transactions' : 'Transacties'}\r\n        </NavLink>\r\n        <NavLink to='/overview' activeClassName='active'>\r\n        {lang === 'en' ? 'Overview' : 'Overzicht'}\r\n        </NavLink>\r\n        <div className='langbar'>\r\n            <input type='radio' id='en' name='lang' value='en' checked={lang === 'en' ? true : false} onChange={handleLangChange}/>\r\n            <label htmlFor='en'>English</label>\r\n            <input type='radio' id='nl' name='lang' value='nl' checked={lang === 'en' ? false : true} onChange={handleLangChange}/>\r\n            <label htmlFor='nl'>Nederlands</label>\r\n        </div>\r\n      </nav>\r\n      <main>\r\n        <Switch>\r\n          <Route exact path='/'>\r\n            <Redirect to='/transactions' />\r\n          </Route>\r\n          <Route path='/transactions'>\r\n            <Transactions transactions={transactions} headers={headers} showCorrectHeader={showCorrectHeader} date={date} setDate={setDate} description={description} setDescription={setDescription} header={header} setHeader={setHeader} amount={amount} setAmount={setAmount} addTransaction={addTransaction} removeTransaction={removeTransaction} changeTransaction={changeTransaction} lang={lang} maxItemsOnPage={maxItemsOnPage} setMaxItemsOnPage={setMaxItemsOnPage}/>\r\n          </Route>\r\n          <Route path='/overview'>\r\n            <Overview transactions={transactions} headers={headers} showCorrectHeader={showCorrectHeader} fromDate={fromDate} setFromDate={setFromDate} toDate={toDate} setToDate={setToDate} addHeader={addHeader} newHeaderIn={newHeaderIn} setNewHeaderIn={setNewHeaderIn} newHeaderOut={newHeaderOut} setNewHeaderOut={setNewHeaderOut} removeHeader={removeHeader} showEmpty={showEmpty} setShowEmpty={setShowEmpty} lang={lang}/>\r\n            </Route>\r\n         </Switch>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter as Router} from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}