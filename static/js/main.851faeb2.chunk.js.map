{"version":3,"sources":["components/Entry/Entry.js","components/EntryList/EntryList.js","components/Entries/Entries.js","components/HeaderTable/HeaderTable.js","components/Analysis/Analysis.js","App.js","index.js"],"names":["Entry","headers","id","date","description","header","amount","removeEntry","className","substring","toFixed","onClick","EntryList","entries","setDate","setDescription","setHeader","setAmount","addEntry","type","onChange","e","target","value","Object","keys","sort","map","i","Number","entry","Entries","HeaderTable","inout","calculate","addHeader","newHeaderIn","setNewHeaderIn","newHeaderOut","setNewHeaderOut","removeHeader","showEmpty","total","handleRemoveClick","el","Analysis","fromDate","setFromDate","toDate","setToDate","setShowEmpty","calculateNetResult","array","filter","length","reduce","a","b","htmlFor","defaultChecked","totalIn","incomeHeaders","totalOut","expenseHeaders","App","year","useState","setEntries","setHeaders","daysInMonth","Date","getFullYear","String","getMonth","padStart","to","activeClassName","exact","path","prev","now","name","toUpperCase","toLowerCase","alert","newHeaders","assign","ReactDOM","render","document","getElementById"],"mappings":"+PAEO,SAASA,EAAT,GAA+E,IAA/DC,EAA8D,EAA9DA,QAASC,EAAqD,EAArDA,GAAIC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,YAAaC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,YAMnE,OACQ,qBAAIC,UAAU,QAAd,UACI,oBAAIA,UAAU,cAAd,SAA6BL,EAAKM,UAAU,EAAE,IAAM,IAAMN,EAAKM,UAAU,EAAG,GAAK,IAAMN,EAAKM,UAAU,EAAG,KACzG,oBAAID,UAAU,qBAAd,SAAoCJ,IACpC,oBAAII,UAAU,gBAAd,SAA+BH,IAC/B,qBAAIG,UAAWP,EAAQI,GAAU,EAAI,mBAAqB,oBAA1D,oBAAwFC,EAAOI,QAAQ,MACvG,oBAAIF,UAAU,gBAAd,SAA8B,wBAAQG,QAVlD,WACIJ,EAAYL,IAS0B,uBCXvC,SAASU,EAAT,GAC4D,IADxCC,EACuC,EADvCA,QAASZ,EAC8B,EAD9BA,QAASE,EACqB,EADrBA,KAAMW,EACe,EADfA,QAASV,EACM,EADNA,YAAaW,EACP,EADOA,eACrEV,EAA8D,EAA9DA,OAAQW,EAAsD,EAAtDA,UAAWV,EAA2C,EAA3CA,OAAQW,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,SAAUX,EAAc,EAAdA,YAMhD,OACI,qBAAKC,UAAU,YAAf,SACI,kCACI,gCACI,+BACI,oBAAIA,UAAU,cAAd,kBACA,oBAAIA,UAAU,qBAAd,yBACA,oBAAIA,UAAU,gBAAd,oBACA,oBAAIA,UAAU,gBAAd,oBACA,oBAAIA,UAAU,uBAGtB,kCACI,+BACI,oBAAIA,UAAU,cAAd,SAA4B,uBAAOW,KAAK,OAAOC,SAAU,SAAAC,GAAC,OAAIP,EAAQO,EAAEC,OAAOC,YAC/E,oBAAIf,UAAU,qBAAd,SAAmC,uBAAOW,KAAK,OAAOI,MAAOnB,EAAagB,SAAU,SAAAC,GAAC,OAAIN,EAAeM,EAAEC,OAAOC,YACjH,oBAAIf,UAAU,gBAAd,SAA8B,yBAAQe,MAAOlB,EAAQe,SAAU,SAAAC,GAAC,OAAIL,EAAUK,EAAEC,OAAOC,QAAzD,UACtB,wBAAiBA,MAAM,IAAX,MACXC,OAAOC,KAAKxB,GAASyB,OAAOC,KAAI,SAACtB,EAAQuB,GACtC,OAAO,wBAAgBL,MAAOlB,EAAvB,SAAgCA,GAAnBuB,WAGhC,oBAAIpB,UAAU,gBAAd,SAA8B,uBAAOW,KAAK,SAASI,MAAOjB,EAAQc,SAAU,SAAAC,GAAC,OAAIJ,EAAUY,OAAOR,EAAEC,OAAOC,aAC3G,oBAAIf,UAAU,gBAAd,SAA8B,wBAAQG,QA3B1D,WACIO,EAASf,EAAMC,EAAaC,EAAQC,IA0BU,oBAEjCO,EAAQc,KAAI,SAACG,EAAOF,GACjB,OAAO,cAAC5B,EAAD,CAAeC,QAASA,EAASC,GAAI4B,EAAM5B,GAAIC,KAAM2B,EAAM3B,KAAMC,YAAa0B,EAAM1B,YAAaC,OAAQyB,EAAMzB,OAAQC,OAAQwB,EAAMxB,OAAQC,YAAaA,GAA9IqB,cChCpC,SAASG,EAAT,GAA+I,IAA7HlB,EAA4H,EAA5HA,QAASZ,EAAmH,EAAnHA,QAASE,EAA0G,EAA1GA,KAAMW,EAAoG,EAApGA,QAASV,EAA2F,EAA3FA,YAAaW,EAA8E,EAA9EA,eAAgBV,EAA8D,EAA9DA,OAAQW,EAAsD,EAAtDA,UAAWV,EAA2C,EAA3CA,OAAQW,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,SAAUX,EAAc,EAAdA,YAEnI,OACI,sBAAKC,UAAU,UAAf,UAII,cAACI,EAAD,CAAWC,QAASA,EAASZ,QAASA,EAASE,KAAMA,EAAMW,QAASA,EAASV,YAAaA,EAAaW,eAAgBA,EAAgBV,OAAQA,EAAQW,UAAWA,EAAWV,OAAQA,EAAQW,UAAWA,EAAWC,SAAUA,EAAUX,YAAaA,IACpP,uBACA,0BCXL,SAASyB,EAAT,GACwB,IADFC,EACC,EADDA,MAAOC,EACN,EADMA,UAAWC,EACjB,EADiBA,UAAWC,EAC5B,EAD4BA,YAAaC,EACzC,EADyCA,eAAgBC,EACzD,EADyDA,aAAcC,EACvE,EADuEA,gBACjGC,EAA0B,EAA1BA,aAAcC,EAAY,EAAZA,UAAY,EAEHP,IAFG,mBAErBjC,EAFqB,KAEZyC,EAFY,KAS1B,SAASC,EAAkBtB,GACvBmB,EAAanB,EAAEC,OAAOC,OAG1B,OACI,qBAAKf,UAAU,QAAf,SACI,kCACI,gCACI,+BACI,oBAAIA,UAAU,gBAAd,oBACA,oBAAIA,UAAU,gBAAd,oBACA,oBAAIA,UAAU,oBAAd,eACA,oBAAIA,UAAU,uBAGtB,kCACA,+BACQ,oBAAIA,UAAU,gBAAd,SAA8B,uBAAOW,KAAK,OAAOI,MAAiB,OAAVU,EAAiBG,EAAcE,EAAclB,SAAU,SAAAC,GAAC,MAAc,OAAVY,EAAiBI,EAAehB,EAAEC,OAAOC,OAASgB,EAAgBlB,EAAEC,OAAOC,YAC/L,oBAAIf,UAAU,kBACd,oBAAIA,UAAU,sBACd,oBAAIA,UAAU,gBAAd,SAA8B,wBAAQG,QAzB1D,WACIwB,EAAoB,OAAVF,EAAiBG,EAAcE,EAAwB,OAAVL,EAAiB,GAAK,GACnE,OAAVA,EAAiBI,EAAe,IAAME,EAAgB,KAuBR,oBAGlCf,OAAOX,QAAQZ,GAASyB,OAAOC,KAAI,SAACiB,EAAIhB,GACpC,OAAQgB,EAAG,GAAK,GAAKH,IAAc,+BAC/B,oBAAIjC,UAAU,gBAAd,SAA+BoC,EAAG,KAClC,qBAAIpC,UAAW,iBAAmByB,EAAlC,oBAAkDW,EAAG,GAAGlC,QAAQ,MAChE,oBAAIF,UAAU,oBAAd,SAAmCkC,EAAQ,GAAKE,EAAG,GAAKF,EAAQ,KAAKhC,QAAQ,GAAK,IAClF,oBAAIF,UAAU,gBAAd,SAA8B,wBAAQe,MAAOqB,EAAG,GAAIjC,QAASgC,EAA/B,sBAJUf,MAOhD,+BACI,oBAAIpB,UAAU,gBAAd,SAA8B,wCAC9B,oBAAIA,UAAW,iBAAmByB,EAAlC,SAAyC,wCAAYS,EAAMhC,QAAQ,QACnE,oBAAIF,UAAU,oBAAd,SAAmCkC,EAAQ,EAAI,IAAM,IACrD,oBAAIlC,UAAU,6BC5C/B,SAASqC,EAAT,GAEqF,IADxFhC,EACuF,EADvFA,QAASZ,EAC8E,EAD9EA,QAAS6C,EACqE,EADrEA,SAAUC,EAC2D,EAD3DA,YAAaC,EAC8C,EAD9CA,OAAQC,EACsC,EADtCA,UAAWd,EAC2B,EAD3BA,UAAWC,EACgB,EADhBA,YACvEC,EAAuF,EAAvFA,eAAgBC,EAAuE,EAAvEA,aAAcC,EAAyD,EAAzDA,gBAAiBC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,UAAWS,EAAe,EAAfA,aAGxE,SAASC,IACL,IAAIC,EAAQvC,EAAQwC,QAAO,SAAAvB,GAAK,OAAIA,EAAM3B,MAAQ2C,GAAYhB,EAAM3B,MAAQ6C,KAC5E,OAAKI,EAAME,OACIF,EAAMzB,KAAI,SAAAG,GAAK,OAAIA,EAAMxB,OAASL,EAAQ6B,EAAMzB,WAASkD,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,KADnE,EA4D9B,OACI,sBAAKjD,UAAU,WAAf,UACI,+CACA,uBAAOkD,QAAQ,OAAf,mBACA,uBAAOvC,KAAK,OAAOjB,GAAG,OAAOqB,MAAOuB,EAAU1B,SAAU,SAAAC,GAAC,OAAI0B,EAAY1B,EAAEC,OAAOC,UAClF,uBAAOmC,QAAQ,KAAf,iBACA,uBAAOvC,KAAK,OAAOjB,GAAG,KAAKqB,MAAOyB,EAAQ5B,SAAU,SAAAC,GAAC,OAAI4B,EAAU5B,EAAEC,OAAOC,UAC5E,uBAAOmC,QAAQ,QAAf,kCACA,uBAAOvC,KAAK,WAAWjB,GAAG,QAAQyD,eAAgBlB,EAAWrB,SAZrE,SAAuBC,GACnB6B,GAAcT,MAYV,uBACA,4CACA,qBAAIjC,UAAW2C,IAAuB,EAAI,MAAQ,MAAlD,oBAAkEA,IAAqBzC,QAAQ,MAC/F,uBACA,wCACA,cAACsB,EAAD,CAAaC,MAAO,KAAMC,UArElC,WACI,IAAI0B,EAAU,EAGVC,EAAgB,GACpB,IAAK,IAAIxD,KAAUJ,EACS,IAApBA,EAAQI,KACRwD,EAAcxD,GAAU,GAKhC,IAAI+C,EAAQvC,EAAQwC,QAAO,SAAAvB,GAAK,OAAIA,EAAM3B,MAAQ2C,GAAYhB,EAAM3B,MAAQ6C,KAC5E,IAAKI,EAAME,OAAQ,MAAO,CAACO,EAAe,GAbnB,oBAgBLT,GAhBK,IAgBvB,2BAAyB,CAAC,IAAjBtB,EAAgB,QACjBA,EAAMzB,UAAUwD,IAChBA,EAAc/B,EAAMzB,SAAWyB,EAAMxB,OACrCsD,GAAW9B,EAAMxB,SAnBF,8BAsBvB,MAAO,CAACuD,EAAeD,IA+CmCzB,UAAWA,EACjEC,YAAaA,EAAaC,eAAgBA,EAAgBG,aAAcA,EAAcC,UAAWA,IACjG,uBACA,0CACA,cAACT,EAAD,CAAaC,MAAO,MAAOC,UA/CnC,WACI,IAAI4B,EAAW,EAGXC,EAAiB,GACrB,IAAK,IAAI1D,KAAUJ,GACU,IAArBA,EAAQI,KACR0D,EAAe1D,GAAU,GAKjC,IAAI+C,EAAQvC,EAAQwC,QAAO,SAAAvB,GAAK,OAAIA,EAAM3B,MAAQ2C,GAAYhB,EAAM3B,MAAQ6C,KAC5E,IAAKI,EAAME,OAAQ,MAAO,CAACS,EAAgB,GAblB,oBAgBPX,GAhBO,IAgBzB,2BAAyB,CAAC,IAAjBtB,EAAgB,QACjBA,EAAMzB,UAAU0D,IAChBA,EAAejC,EAAMzB,SAAWyB,EAAMxB,OACtCwD,GAAYhC,EAAMxB,SAnBD,8BAsBzB,MAAO,CAACyD,EAAgBD,IAyBqC3B,UAAWA,EACpEG,aAAcA,EAAcC,gBAAiBA,EAAiBC,aAAcA,EAAcC,UAAWA,IACrG,uBACA,0BC2BGuB,MAhHf,WAAe,IAgFOC,EAhFP,EAGiBC,mBAAS,IAH1B,mBAGNrD,EAHM,KAGGsD,EAHH,OAMiBD,mBAAS,IAN1B,mBAMNjE,EANM,KAMGmE,EANH,OASWF,mBAAS,MATpB,mBASN/D,EATM,KASAW,EATA,OAUyBoD,mBAAS,IAVlC,mBAUN9D,EAVM,KAUOW,EAVP,OAWemD,mBAAS,IAXxB,mBAWN7D,EAXM,KAWEW,EAXF,OAYekD,mBAAS,IAZxB,mBAYN5D,EAZM,KAYEW,EAZF,OAeyBiD,mBAAS,IAflC,mBAeN9B,EAfM,KAeOC,EAfP,OAgB2B6B,mBAAS,IAhBpC,mBAgBN5B,EAhBM,KAgBQC,EAhBR,KAmBP8B,EAAc,CAAC,IA6DDJ,GA7DgB,IAAIK,MAAOC,cA8DtCN,EAAO,MAAQ,GAAMA,EAAO,IAAM,GAAKA,EAAO,MAAQ,EA9DC,GAAK,IAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAnBhG,EAoBmBC,mBAAS,GAAD,QAAI,IAAII,MAAOC,cAAf,YAAgCC,QAAO,IAAIF,MAAOG,WAAa,GAAGC,SAAS,EAAG,KAA9E,QApB3B,mBAoBN5B,EApBM,KAoBIC,EApBJ,OAqBemB,mBAAS,GAAD,QAAI,IAAII,MAAOC,cAAf,YAAgCC,QAAO,IAAIF,MAAOG,WAAa,GAAGC,SAAS,EAAG,KAA9E,YAAsFL,GAAY,IAAIC,MAAOG,cArBpI,mBAqBNzB,EArBM,KAqBEC,EArBF,OAwBqBiB,oBAAS,GAxB9B,oBAwBNzB,GAxBM,MAwBKS,GAxBL,MAoFb,OACE,sBAAK1C,UAAU,MAAf,UACE,gCACE,cAAC,IAAD,CAASmE,GAAG,WAAWC,gBAAgB,SAAvC,qBAGA,cAAC,IAAD,CAASD,GAAG,YAAYC,gBAAgB,SAAxC,yBAIF,+BACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,IAAD,CAAUH,GAAG,eAEf,cAAC,IAAD,CAAOG,KAAK,WAAZ,SACE,cAAC/C,EAAD,CAASlB,QAASA,EAASZ,QAASA,EAASE,KAAMA,EAAMW,QAASA,EAASV,YAAaA,EAAaW,eAAgBA,EAAgBV,OAAQA,EAAQW,UAAWA,EAAWV,OAAQA,EAAQW,UAAWA,EAAWC,SAzE3N,SAAkBf,EAAMC,EAAaC,EAAQC,GACtCH,GAASC,GAAgBC,KAAUC,GAAU,KAGlD6D,GAAW,SAAAY,GAAI,MAAK,CAClB,CAAC7E,GAAIoE,KAAKU,MAAO7E,KAAMA,EAAMC,YAAaA,EAAaC,OAAQA,EAAQC,OAAQA,IAD7D,mBACyEyE,IAI5FrD,MAAK,SAAC8B,EAAGC,GACR,OAAID,EAAErD,KAAOsD,EAAEtD,KAAa,EACnBqD,EAAErD,KAAOsD,EAAEtD,MAAc,EACtB,QAIdY,EAAe,IACfC,EAAU,IACVC,EAAU,MAuDmOV,YAnD/O,SAAqBL,GACnBiE,GAAW,SAAAY,GAAI,OAAIA,EAAK1B,QAAO,SAAAT,GAAE,OAAIA,EAAG1C,KAAOA,aAoDzC,cAAC,IAAD,CAAO4E,KAAK,YAAZ,SACE,cAACjC,EAAD,CAAUhC,QAASA,EAASZ,QAASA,EAAS6C,SAAUA,EAAUC,YAAaA,EAAaC,OAAQA,EAAQC,UAAWA,EAAWd,UAjD5I,SAAmB8C,EAAMhD,GAClBgD,KAGLA,EAAOA,EAAKxE,UAAU,EAAG,GAAGyE,cAAgBD,EAAKxE,UAAU,GAAG0E,iBAClDlF,EACVmF,MAAM,yBAGRhB,GAAW,SAAAW,GAAI,kCAASA,GAAT,kBAAgBE,EAAOhD,SAwC0HG,YAAaA,EAAaC,eAAgBA,EAAgBC,aAAcA,EAAcC,gBAAiBA,EAAiBC,aApC1R,SAAsByC,GACpB,IAD0B,EACtBI,EAAa7D,OAAO8D,OAAO,GAAIrF,GADT,cAERY,GAFQ,IAE1B,2BAA2B,CACzB,GADyB,QACfR,SAAW4E,EAEnB,YADAG,MAAM,6CAJgB,qCAQnBC,EAAWJ,GAClBb,EAAWiB,IA2ByS5C,UAAWA,GAAWS,aAAcA,gBCvG5VqC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.851faeb2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport function Entry({headers, id, date, description, header, amount, removeEntry}) {\r\n\r\n    function handleClick() {\r\n        removeEntry(id);\r\n    }\r\n\r\n    return(\r\n            <tr className='Entry'>\r\n                <td className='column-date'>{date.substring(8,10) + '-' + date.substring(5, 7) + '-' + date.substring(0, 4)}</td>\r\n                <td className='column-description'>{description}</td>\r\n                <td className='column-header'>{header}</td>\r\n                <td className={headers[header] > 0 ? 'column-amount in' : 'column-amount out'}>&#8364; {amount.toFixed(2)}</td>\r\n                <td className='column-remove'><button onClick={handleClick}>&#215;</button></td>\r\n           </tr>\r\n     );\r\n}","import React from 'react';\r\nimport {Entry} from '../Entry/Entry';\r\n\r\nexport function EntryList({entries, headers, date, setDate, description, setDescription,\r\n    header, setHeader, amount, setAmount, addEntry, removeEntry}) {\r\n\r\n    function handleClick() {\r\n        addEntry(date, description, header, amount);\r\n    }\r\n\r\n    return (\r\n        <div className='EntryList'>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th className='column-date'>Date</th>\r\n                        <th className='column-description'>Description</th>\r\n                        <th className='column-header'>Header</th>\r\n                        <th className='column-amount'>Amount</th>\r\n                        <th className='column-remove'></th>\r\n                    </tr>\r\n               </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td className='column-date'><input type='date' onChange={e => setDate(e.target.value)} /></td>\r\n                        <td className='column-description'><input type='text' value={description} onChange={e => setDescription(e.target.value)}/></td>\r\n                        <td className='column-header'><select value={header} onChange={e => setHeader(e.target.value)}>\r\n                                <option key='-1' value=''></option>\r\n                                {Object.keys(headers).sort().map((header, i) => {\r\n                                    return <option key={i} value={header}>{header}</option>\r\n                                })}\r\n                            </select></td>\r\n                        <td className='column-amount'><input type='number' value={amount} onChange={e => setAmount(Number(e.target.value))}/></td>\r\n                        <td className='column-remove'><button onClick={handleClick}>+</button></td>\r\n                     </tr>\r\n                    {entries.map((entry, i) => {\r\n                        return <Entry key={i} headers={headers} id={entry.id} date={entry.date} description={entry.description} header={entry.header} amount={entry.amount} removeEntry={removeEntry}/>\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n//import {ImportEntries} from '../ImportEntries/ImportEntries';\r\nimport {EntryList} from '../EntryList/EntryList';\r\n\r\nexport function Entries({entries, headers, date, setDate, description, setDescription, header, setHeader, amount, setAmount, addEntry, removeEntry}) {\r\n\r\n    return (\r\n        <div className='Entries'>\r\n            {/* <h2>Import entries</h2>\r\n            <ImportEntries />\r\n            <hr /> */}\r\n            <EntryList entries={entries} headers={headers} date={date} setDate={setDate} description={description} setDescription={setDescription} header={header} setHeader={setHeader} amount={amount} setAmount={setAmount} addEntry={addEntry} removeEntry={removeEntry}/>\r\n            <hr />\r\n            <br />\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nexport function HeaderTable({inout, calculate, addHeader, newHeaderIn, setNewHeaderIn, newHeaderOut, setNewHeaderOut,\r\n    removeHeader, showEmpty}) {\r\n\r\n    let [headers, total] = calculate();\r\n\r\n    function handleAddClick() {\r\n        addHeader(inout === 'in' ? newHeaderIn : newHeaderOut, inout === 'in' ? 1 : -1)\r\n        inout === 'in' ? setNewHeaderIn('') : setNewHeaderOut('');\r\n    }\r\n\r\n    function handleRemoveClick(e) {\r\n        removeHeader(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className='Inout'>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th className='column-header'>Header</th>\r\n                        <th className='column-amount'>Amount</th>\r\n                        <th className='column-percentage'>%</th>\r\n                        <th className='column-remove'></th>\r\n                  </tr>\r\n               </thead>\r\n                <tbody>\r\n                <tr>\r\n                        <td className='column-header'><input type='text' value={inout === 'in' ? newHeaderIn : newHeaderOut} onChange={e => inout === 'in' ? setNewHeaderIn(e.target.value) : setNewHeaderOut(e.target.value)} /></td>\r\n                        <td className='column-amount'></td>\r\n                        <td className='column-percentage'></td>\r\n                        <td className='column-remove'><button onClick={handleAddClick}>+</button></td>\r\n\r\n                    </tr>\r\n                   {Object.entries(headers).sort().map((el, i) => {\r\n                        return (el[1] > 0 || showEmpty) && <tr key={i}>\r\n                            <td className='column-header'>{el[0]}</td>\r\n                            <td className={'column-amount ' + inout}>&#8364; {el[1].toFixed(2)}</td>\r\n                            <td className='column-percentage'>{total > 0 ? (el[1] / total * 100).toFixed(0) : 0}</td>\r\n                            <td className='column-remove'><button value={el[0]} onClick={handleRemoveClick}>&#215;</button></td>\r\n                       </tr>\r\n                      })}\r\n                    <tr>\r\n                        <td className='column-header'><b>Total</b></td>\r\n                        <td className={'column-amount ' + inout}><b>&#8364; {total.toFixed(2)}</b></td>\r\n                        <td className='column-percentage'>{total > 0 ? 100 : 0}</td>\r\n                        <th className='column-remove'></th>\r\n                  </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport {HeaderTable} from '../HeaderTable/HeaderTable';\r\n\r\nexport function Analysis({\r\n    entries, headers, fromDate, setFromDate, toDate, setToDate, addHeader, newHeaderIn,\r\n    setNewHeaderIn, newHeaderOut, setNewHeaderOut, removeHeader, showEmpty, setShowEmpty}) {\r\n\r\n    //Calculates the net result of income and expenses in the selected period\r\n    function calculateNetResult() {\r\n        let array = entries.filter(entry => entry.date >= fromDate && entry.date <= toDate);\r\n        if (!array.length) return 0;\r\n        return array = array.map(entry => entry.amount * headers[entry.header]).reduce((a, b) => a + b);\r\n    }\r\n\r\n    //Calculates the total income and the income for each header separately, in the selected time period\r\n    function calculateIncome() {\r\n        let totalIn = 0;\r\n         \r\n        //Filter the income headers\r\n        let incomeHeaders = {};\r\n        for (let header in headers) {\r\n            if (headers[header] === 1) {\r\n                incomeHeaders[header] = 0;\r\n            }\r\n        }\r\n\r\n        //Filter entries in selected time period\r\n        let array = entries.filter(entry => entry.date >= fromDate && entry.date <= toDate);\r\n        if (!array.length) return [incomeHeaders, 0];\r\n\r\n        //For each entry, check if header is in income headers. If so, update the amount for that header and the total amount\r\n        for (let entry of array) {\r\n            if (entry.header in incomeHeaders) {\r\n                incomeHeaders[entry.header] += entry.amount;\r\n                totalIn += entry.amount;\r\n            }\r\n         }\r\n        return [incomeHeaders, totalIn];\r\n    }\r\n\r\n    //Calculates the total expenses and the expenses for each header separately, in the selected time period\r\n    function calculateExpenses() {\r\n        let totalOut = 0;\r\n\r\n        //Filter the expense headers\r\n        let expenseHeaders = {};\r\n        for (let header in headers) {\r\n            if (headers[header] === -1) {\r\n                expenseHeaders[header] = 0;\r\n            }\r\n        }\r\n\r\n        //Filter entries in selected time period\r\n        let array = entries.filter(entry => entry.date >= fromDate && entry.date <= toDate);\r\n        if (!array.length) return [expenseHeaders, 0];\r\n\r\n        //For each entry, check if header is in expense headers. If so, update the amount for that header and the total amount\r\n        for (let entry of array) {\r\n            if (entry.header in expenseHeaders) {\r\n                expenseHeaders[entry.header] += entry.amount;\r\n                totalOut += entry.amount;\r\n            }\r\n         }\r\n        return [expenseHeaders, totalOut];\r\n    }\r\n\r\n    function toggleChecked(e) {\r\n        setShowEmpty(!showEmpty);\r\n    }\r\n\r\n    return (\r\n        <div className='Analysis'>\r\n            <h2>Select period</h2>\r\n            <label htmlFor='from'>From:</label>\r\n            <input type='date' id='from' value={fromDate} onChange={e => setFromDate(e.target.value)}/>\r\n            <label htmlFor='to'>To:</label>\r\n            <input type='date' id='to' value={toDate} onChange={e => setToDate(e.target.value)}/>\r\n            <label htmlFor='empty'>Show empty headers: </label>\r\n            <input type='checkbox' id='empty' defaultChecked={showEmpty} onChange={toggleChecked}/>\r\n            <hr />\r\n            <h2>Net result</h2>\r\n            <h3 className={calculateNetResult() < 0 ? 'neg' : 'pos'}>&#8364; {calculateNetResult().toFixed(2)}</h3>\r\n            <hr />\r\n            <h2>Income</h2>\r\n            <HeaderTable inout={'in'} calculate={calculateIncome} addHeader={addHeader} \r\n            newHeaderIn={newHeaderIn} setNewHeaderIn={setNewHeaderIn} removeHeader={removeHeader} showEmpty={showEmpty}/>\r\n            <hr />\r\n            <h2>Expenses</h2>\r\n            <HeaderTable inout={'out'} calculate={calculateExpenses} addHeader={addHeader}\r\n            newHeaderOut={newHeaderOut} setNewHeaderOut={setNewHeaderOut} removeHeader={removeHeader} showEmpty={showEmpty}/>\r\n            <hr />\r\n            <br />\r\n       </div>\r\n    );\r\n}\r\n","import './App.css';\nimport React, {useState} from 'react';\nimport {Switch, Route, Redirect, NavLink} from 'react-router-dom';\nimport {Entries} from './components/Entries/Entries';\nimport {Analysis} from './components/Analysis/Analysis';\n\nfunction App() {\n\n  //Hold the entries\n  const [entries, setEntries] = useState([]);\n\n  //Hold the headers\n  const [headers, setHeaders] = useState({});\n\n  //Hold the data for a new entry\n  const [date, setDate] = useState(null);\n  const [description, setDescription] = useState('');\n  const [header, setHeader] = useState('');\n  const [amount, setAmount] = useState('');\n\n  //Hold the data for a new header\n  const [newHeaderIn, setNewHeaderIn] = useState('');\n  const [newHeaderOut, setNewHeaderOut] = useState('');\n\n  //Initialize the correct month and hold the data for the selected time period\n  const daysInMonth = [31, isLeapYear(new Date().getFullYear()) ? 29 : 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n  const [fromDate, setFromDate] = useState(`${new Date().getFullYear()}-${String(new Date().getMonth() + 1).padStart(2, '0')}-01`)\n  const [toDate, setToDate] = useState(`${new Date().getFullYear()}-${String(new Date().getMonth() + 1).padStart(2, '0')}-${daysInMonth[new Date().getMonth()]}`);\n\n  //Hold data for checkbox\n  const [showEmpty, setShowEmpty] = useState(true);\n  \n  //Add an entry to the list\n  function addEntry(date, description, header, amount) {\n    if (!date || !description || !header || amount <= 0) {\n      return;\n    }\n    setEntries(prev => ([\n      {id: Date.now(), date: date, description: description, header: header, amount: amount}, ...prev\n    ]\n    \n    //Sort the new list\n    .sort((a, b) => {\n      if (a.date < b.date) return 1;\n      else if (a.date > b.date) return -1;\n      else return 0;\n    })));\n\n    //Reset the data fields\n    setDescription('');\n    setHeader('');\n    setAmount('');\n  }\n\n  //Remove entry from the list\n  function removeEntry(id) {\n    setEntries(prev => prev.filter(el => el.id !== id))\n  }\n\n  //Add header if it's not already in the list. First letter should be uppercase with the rest lowercase.\n  function addHeader(name, inout) {\n    if (!name) {\n      return;\n    }\n    name = name.substring(0, 1).toUpperCase() + name.substring(1).toLowerCase()\n    if (name in headers) {\n      alert('Header already exists')\n      return;\n    }\n    setHeaders(prev => ({...prev, [name]: inout}));\n   }\n\n  //Remove header if there are no more entries with that header\n  function removeHeader(name) {\n    let newHeaders = Object.assign({}, headers)\n    for (let entry of entries) {\n      if (entry.header === name) {\n        alert('There are still entries with that header');\n        return;\n      }\n    }\n    delete newHeaders[name];\n    setHeaders(newHeaders);\n  }\n\n  //Check whether the current year is a leap year\n  function isLeapYear(year) {\n    return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0)\n  }\n\n  return (\n    <div className=\"App\">\n      <nav>\n        <NavLink to='/entries' activeClassName='active'>\n          Entries\n        </NavLink>\n        <NavLink to='/analysis' activeClassName='active'>\n          Analysis\n        </NavLink>\n      </nav>\n      <main>\n        <Switch>\n          <Route exact path='/'>\n            <Redirect to='/entries' />\n          </Route>\n          <Route path='/entries'>\n            <Entries entries={entries} headers={headers} date={date} setDate={setDate} description={description} setDescription={setDescription} header={header} setHeader={setHeader} amount={amount} setAmount={setAmount} addEntry={addEntry} removeEntry={removeEntry}/>\n          </Route>\n          <Route path='/analysis'>\n            <Analysis entries={entries} headers={headers} fromDate={fromDate} setFromDate={setFromDate} toDate={toDate} setToDate={setToDate} addHeader={addHeader} newHeaderIn={newHeaderIn} setNewHeaderIn={setNewHeaderIn} newHeaderOut={newHeaderOut} setNewHeaderOut={setNewHeaderOut} removeHeader={removeHeader} showEmpty={showEmpty} setShowEmpty={setShowEmpty}/>\n          </Route>\n        </Switch>\n      </main>\n     \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter as Router} from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}