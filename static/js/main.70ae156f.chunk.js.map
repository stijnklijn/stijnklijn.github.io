{"version":3,"sources":["components/User/User.js","components/Import/Import.js","components/Filter/Filter.js","components/Transaction/Transaction.js","components/List/List.js","components/Transactions/Transactions.js","components/Header/Header.js","components/HeaderTable/HeaderTable.js","components/BarChart/BarChart.js","components/PieChart/PieChart.js","components/Overview/Overview.js","utils/Server.js","App.js","index.js"],"names":["User","email","setEmail","password","setPassword","newEmail","setNewEmail","newPassword1","setNewPassword1","newPassword2","setNewPassword2","forgotPasswordEmail","setForgotPasswordEmail","login","register","getPassword","lang","className","htmlFor","data-test","type","id","onChange","e","target","value","onClick","preventDefault","trim","length","alert","Import","inputField","importTransactions","ref","Filter","headers","showCorrectHeader","filterFromDate","setFilterFromDate","filterToDate","setFilterToDate","filterDescription","setFilterDescription","setFilterHeaders","filterFromAmount","setFilterFromAmount","filterToAmount","setFilterToAmount","resetFilter","name","multiple","Array","from","options","filter","option","selected","map","sort","a","b","Number","header","i","Transaction","date","description","headerId","amount","isIncome","removeTransaction","changeTransaction","substring","toFixed","List","transactions","setDate","setDescription","setHeaderId","setAmount","addTransaction","maxItemsOnPage","setMaxItemsOnPage","itemsOnPage","Math","min","transaction","header_id","is_income","prev","Transactions","userId","useRef","filteredTransactions","current","useState","filterHeaders","file","files","text","textResponse","lines","split","fields","replace","el","RegExp","test","includes","String","Header","total","inout","removeHeader","changeHeader","HeaderTable","calculate","addHeader","newHeaderIn","setNewHeaderIn","newHeaderOut","setNewHeaderOut","showEmpty","Object","entries","BarChart","numberOfBars","keys","longestBar","max","values","bars","ticks","x","y","width","height","color","percentage","push","number","xmlns","viewBox","tick","fontSize","x1","y1","x2","y2","stroke","bar","strokeWidth","fill","PieChart","subTotal","slices","startX","cos","PI","startY","sin","moreThanHalf","endX","endY","transform","slice","d","Overview","fromDate","setFromDate","toDate","setToDate","setShowEmpty","view","setView","calculateTotalIncome","reduce","calculateTotalExpenses","calculateIncomePerHeader","incomeHeaders","array","calculateExpensesPerHeader","expenseHeaders","checked","Server","host","fetch","method","response","status","Error","json","jsonResponse","newPassword","body","JSON","stringify","getHeaders","deleteHeader","getTransactions","deleteTransaction","App","year","setUserId","setTransactions","setHeaders","daysInMonth","Date","getFullYear","getMonth","padStart","setLang","handleLangChange","headerName","find","sortByDateThenId","useEffect","promises","Promise","all","then","res","err","to","activeClassName","exact","path","catch","index","findIndex","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.70ae156f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport function User({\r\n    email,\r\n    setEmail,\r\n    password,\r\n    setPassword,\r\n    newEmail,\r\n    setNewEmail,\r\n    newPassword1,\r\n    setNewPassword1,\r\n    newPassword2,\r\n    setNewPassword2,\r\n    forgotPasswordEmail,\r\n    setForgotPasswordEmail,\r\n    login,\r\n    register,\r\n    getPassword,\r\n    lang}) {\r\n\r\n    function handleLogin(e) {\r\n        e.preventDefault();\r\n        login(email, password);\r\n    }\r\n\r\n    function handleRegister(e) {\r\n        e.preventDefault();\r\n        if (newEmail.trim().length < 5 || newEmail.trim().length > 50) {\r\n            alert(lang === 'en' ? 'E-mail needs to be between 5 and 50 characters' : 'E-mail moet tussen de 5 en 50 karakters bevatten')\r\n        }\r\n        else if (newPassword1 !== newPassword2) {\r\n            alert(lang === 'en' ? 'Passwords do not match' : 'Wachtwoorden komen niet overeen')\r\n        }\r\n        else if (newPassword1.trim().length < 8 || newPassword1.trim().length > 50) {\r\n            alert(lang === 'en' ? 'Password needs to be between 8 and 50 characters' : 'Wachtwoord moet tussen de 8 en 50 karakters bevatten')\r\n        }\r\n        else {\r\n            register(newEmail.trim(), newPassword1.trim())\r\n        }\r\n    }\r\n\r\n    function handleForgotPassword(e) {\r\n        e.preventDefault();\r\n        getPassword(forgotPasswordEmail);\r\n    }\r\n\r\n   return (\r\n        <div className='User'>\r\n            <form>\r\n                <h2>{lang === 'en' ? 'Login' : 'Inloggen'}</h2>\r\n                <label htmlFor='email'>E-mail: </label>\r\n                <input data-test='email' type='email' id='email' onChange={e => setEmail(e.target.value)}/>\r\n                <label htmlFor='password'>{lang === 'en' ? 'Password: ' : 'Wachtwoord: '}</label>\r\n                <input data-test='password' type='password' id='password' onChange={e => setPassword(e.target.value)}/>\r\n                <button data-test='login-submit' onClick={handleLogin}>{lang === 'en' ? 'Login' : 'Inloggen'}</button>\r\n            </form>\r\n            <br />\r\n            <hr />\r\n            <form>\r\n                <h2>{lang === 'en' ? 'Register' : 'Registreer'}</h2>\r\n                <label htmlFor='newemail'>E-mail: </label>\r\n                <input type='email' id='newemail' onChange={e => setNewEmail(e.target.value)}/>\r\n                <label htmlFor='newpassword1'>{lang === 'en' ? 'Password: ' : 'Wachtwoord: '}</label>\r\n                <input type='password' id='newpassword1' onChange={e => setNewPassword1(e.target.value)}/>\r\n                <label htmlFor='newpassword2'>{lang === 'en' ? 'Repeat password: ' : 'Herhaal wachtwoord: '}</label>\r\n                <input type='password' id='newpassword2' onChange={e => setNewPassword2(e.target.value)}/>\r\n                <button onClick={handleRegister}>{lang === 'en' ? 'Register' : 'Registreer'}</button>\r\n            </form>\r\n            <br />\r\n            <hr />\r\n            <form>\r\n                <h2>{lang === 'en' ? 'Forgot password' : 'Wachtwoord vergeten'}</h2>\r\n                <label htmlFor='forgotpasswordemail'>E-mail: </label>\r\n                <input type='email' id='forgotpasswordemail' onChange={e => setForgotPasswordEmail(e.target.value)}/>\r\n                <button onClick={handleForgotPassword}>{lang === 'en' ? 'Request password' : 'Wachtwoord opvragen'}</button>\r\n            </form>\r\n            <br />\r\n            <hr />\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport function Import({lang, inputField, importTransactions}) {\r\n    return (\r\n        <div className='Import'>\r\n            <h2>{lang === 'en' ? 'Import' : 'Importeer'}</h2>\r\n            <input type='file' id='import' ref={inputField} />\r\n            <button id='import' onClick={importTransactions}>{lang === 'en' ? 'Import' : 'Importeer'}</button>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport function Filter({\r\n    lang,\r\n    headers, \r\n    showCorrectHeader, \r\n    filterFromDate, \r\n    setFilterFromDate,\r\n    filterToDate,\r\n    setFilterToDate, \r\n    filterDescription, \r\n    setFilterDescription,\r\n    setFilterHeaders, \r\n    filterFromAmount, \r\n    setFilterFromAmount, \r\n    filterToAmount, \r\n    setFilterToAmount, \r\n    resetFilter}) {\r\n\r\n    return (\r\n        <div className='Filter'>\r\n        <h2>Filter</h2>\r\n        <table>\r\n            <tbody>\r\n                <tr>\r\n                    <td><label htmlFor='fromdate'>{lang === 'en' ? 'From:  ' : 'Van: '}</label></td>\r\n                    <td><input type='date' value={filterFromDate} id='fromdate' onChange={e => setFilterFromDate(e.target.value)}></input></td>\r\n                    <td><label htmlFor='todate'>{lang === 'en' ? 'To: ' : 'Tot: '}</label></td>\r\n                    <td><input type='date' value={filterToDate} id='todate' onChange={e => setFilterToDate(e.target.value)}></input></td>\r\n                </tr>\r\n                <tr>\r\n                    <td><label htmlFor='description'>{lang === 'en' ? 'Description: ' : 'Omschrijving: '}</label></td>\r\n                    <td><input type='text' id='description' value={filterDescription} onChange={e => setFilterDescription(e.target.value)}/></td>\r\n                    <td><label htmlFor='headers'>{lang === 'en' ? 'Headers: ' : 'Rubrieken: '}</label></td>\r\n                    <td>\r\n                        <select id='headers' name='headers' multiple onChange={e => setFilterHeaders(Array.from(e.target.options).filter(option => option.selected).map(option => option.value))}>\r\n                        {headers.sort((a, b) => {\r\n                            if (showCorrectHeader(Number(a.id)) < showCorrectHeader(Number(b.id))) {\r\n                                return -1;\r\n                            }\r\n                            else {\r\n                                return 1;\r\n                            }\r\n                        }).map((header, i) => {\r\n                            return <option key={i} value={header.id}>{showCorrectHeader(header.id)}</option>\r\n                        })}\r\n                        </select>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td><label htmlFor='fromamount'>{lang === 'en' ? 'From amount: ' : 'Vanaf bedrag: '}</label></td>\r\n                    <td><input type='number' id='fromamount' value={filterFromAmount} onChange={e => setFilterFromAmount(e.target.value)}></input></td>\r\n                    <td><label htmlFor='toamount'>{lang === 'en' ? 'To amount: ' : 'Tot bedrag: '}</label></td>\r\n                    <td><input type='number' id='toamount' value={filterToAmount} onChange={e => setFilterToAmount(e.target.value)}></input></td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n        <br />\r\n        <button onClick={resetFilter}>Reset filter</button>\r\n    </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport function Transaction({\r\n    headers, \r\n    showCorrectHeader, \r\n    id, \r\n    date,\r\n    description, \r\n    headerId, \r\n    amount, \r\n    isIncome,\r\n    removeTransaction, \r\n    changeTransaction, \r\n    lang}) {\r\n\r\n    function handleChangeHeader(e) {\r\n        changeTransaction(id, description, e.target.value);\r\n    }\r\n\r\n    function handleChangeDescription(e) {\r\n        changeTransaction(id, e.target.value, headerId);\r\n    }\r\n\r\n    function handleClick() {\r\n        removeTransaction(id);\r\n    }\r\n\r\n    return(\r\n            <tr className='Transaction'>\r\n                <td className='column-date'>{date.substring(8,10) + '-' + date.substring(5, 7) + '-' + date.substring(0, 4)}</td>\r\n                <td className='column-description'><input type='text' value={description} onChange={handleChangeDescription}/></td>\r\n                <td className='column-header'><select value={Number(headerId)} onChange={handleChangeHeader}>\r\n                                <option key='-1' value=''></option>\r\n                                {headers.sort((a, b) => {\r\n                                    if (showCorrectHeader(Number(a.id)) < showCorrectHeader(Number(b.id))) {\r\n                                        return -1;\r\n                                    }\r\n                                    else {\r\n                                        return 1;\r\n                                    }\r\n                                }).map((header, i) => {\r\n                                    return <option key={i} value={header.id}>{showCorrectHeader(header.id)}</option>\r\n                                })}\r\n                            </select></td>\r\n                 <td className={isIncome ? 'column-amount in' : 'column-amount out'}>&#8364; {Number(amount).toFixed(2)}</td>\r\n                <td className='column-remove'><button onClick={handleClick}>&#215;</button></td>\r\n           </tr>\r\n     );\r\n}","import React from 'react';\r\nimport {Transaction} from '../Transaction/Transaction';\r\n\r\nexport function List({\r\n    transactions, \r\n    headers, \r\n    showCorrectHeader, \r\n    date, \r\n    setDate, \r\n    description, \r\n    setDescription,\r\n    headerId, \r\n    setHeaderId,\r\n    amount,\r\n    setAmount, \r\n    addTransaction, \r\n    removeTransaction,\r\n    changeTransaction, \r\n    lang, \r\n    maxItemsOnPage, \r\n    setMaxItemsOnPage}) {\r\n\r\n    let itemsOnPage = 0;\r\n\r\n\r\n    function handleClick() {\r\n        addTransaction(date, description, headerId, amount);\r\n    }\r\n\r\n    function showMoreItems() {\r\n        setMaxItemsOnPage(prev => prev + 50);\r\n    }\r\n    \r\n    return (\r\n        <div className='List'>\r\n           <h2>{lang === 'en' ? 'List' : 'Lijst'}</h2>\r\n            <p>{lang === 'en' ? `Showing ${Math.min(maxItemsOnPage, transactions.length)} of ${transactions.length} transactions` : `${Math.min(maxItemsOnPage, transactions.length)} van ${transactions.length} transacties tonend`}</p>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th className='column-date'>{lang === 'en' ? 'Date' : 'Datum'}</th>\r\n                        <th className='column-description'>{lang === 'en' ? 'Description' : 'Omschrijving' }</th>\r\n                        <th className='column-header'>{lang === 'en' ? 'Header' : 'Rubriek'}</th>\r\n                        <th className='column-amount'>{lang === 'en' ? 'Amount' : 'Bedrag'}</th>\r\n                        <th className='column-remove'></th>\r\n                    </tr>\r\n               </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td className='column-date'><input type='date' onChange={e => setDate(e.target.value)} /></td>\r\n                        <td className='column-description'><input type='text' value={description} onChange={e => setDescription(e.target.value)}/></td>\r\n                        <td className='column-header'><select value={headerId} onChange={e => setHeaderId(Number(e.target.value))}>\r\n                                <option key='-1' value=''></option>\r\n                                {headers.map((header, i) => {\r\n                                    return <option key={i} value={header.id}>{showCorrectHeader(header.id)}</option>\r\n                                })}\r\n                            </select></td>\r\n                        <td className='column-amount'><input type='number' value={Number(amount)} onChange={e => setAmount(Number(e.target.value))}/></td>\r\n                        <td className='column-remove'><button onClick={handleClick}>+</button></td>\r\n                     </tr>\r\n                    {transactions.map((transaction, i) => {\r\n                        itemsOnPage++;\r\n                        return itemsOnPage <= maxItemsOnPage && <Transaction\r\n                        key={i}\r\n                        headers={headers}\r\n                        showCorrectHeader={showCorrectHeader}\r\n                        id={transaction.id}\r\n                        date={transaction.date} \r\n                        description={transaction.description}\r\n                        headerId={transaction.header_id} \r\n                        amount={transaction.amount} \r\n                        isIncome={transaction.is_income}\r\n                        removeTransaction={removeTransaction} \r\n                        changeTransaction={changeTransaction} \r\n                        lang={lang}/>\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n                <button className={maxItemsOnPage < transactions.length ? 'show-more-button show' : 'show-more-button hide'} onClick={showMoreItems}>{lang === 'en' ? 'Show more' : 'Toon meer'}</button>\r\n        </div>\r\n    );\r\n}","import React, {useRef, useState} from 'react';\r\nimport {Import} from '../Import/Import';\r\nimport {Filter} from '../Filter/Filter';\r\nimport {List} from '../List/List';\r\n\r\nexport function Transactions({\r\n    userId,\r\n    transactions, \r\n    headers, \r\n    showCorrectHeader, \r\n    date, \r\n    setDate, \r\n    description, \r\n    setDescription,\r\n    headerId, \r\n    setHeaderId,\r\n    amount, \r\n    setAmount, \r\n    addTransaction, \r\n    removeTransaction, \r\n    changeTransaction, \r\n    lang, \r\n    maxItemsOnPage, \r\n    setMaxItemsOnPage}) {\r\n    \r\n    const inputField = useRef(null);\r\n    \r\n    //Hold the filtered transactions\r\n    let filteredTransactions = useRef();\r\n    filteredTransactions.current = transactions;\r\n\r\n    const [filterFromDate, setFilterFromDate] = useState();\r\n    const [filterToDate, setFilterToDate] = useState('');\r\n    const [filterDescription, setFilterDescription] = useState('');\r\n    const [filterHeaders, setFilterHeaders] = useState([]);\r\n    const [filterFromAmount, setFilterFromAmount] = useState(0);\r\n    const [filterToAmount, setFilterToAmount] = useState(0);\r\n\r\n    //Read the data from a file selected by the user\r\n    async function importTransactions(e) {\r\n        try {\r\n            let file = inputField.current.files[0];\r\n            inputField.current.value = null;\r\n            let textResponse = await file.text();\r\n            let lines = textResponse.split('\\n');\r\n            for (let i = 1; i < lines.length - 1; i++) {\r\n                let fields = lines[i].split(';');\r\n                let date = `${fields[0].substring(1, 5)}-${fields[0].substring(5, 7)}-${fields[0].substring(7, 9)}`\r\n                let description = fields[1].substring(1, fields[1].length - 1)\r\n                let headerId = fields[5] === '\"Bij\"' ? 1 : 2;\r\n                let amount = Number(fields[6].substring(1, fields[6].length - 1).replace(',','.'));\r\n                addTransaction(date, description, headerId, amount)\r\n            }\r\n        } catch (e) {\r\n            alert('An error occured while trying to read this file')\r\n        }\r\n     }\r\n\r\n    //Reset the filter\r\n    function resetFilter() {\r\n        setFilterFromDate('');\r\n        setFilterToDate('');\r\n        setFilterDescription('');\r\n        setFilterHeaders([]);\r\n        setFilterFromAmount(0);\r\n        setFilterToAmount(0);\r\n    }\r\n\r\n    //Filter transactions according to the set filters\r\n    filteredTransactions.current = transactions;\r\n\r\n    if (filterFromDate) {\r\n        filteredTransactions.current = filteredTransactions.current.filter(el => el.date >= filterFromDate);\r\n    }\r\n    if (filterToDate) {\r\n        filteredTransactions.current = filteredTransactions.current.filter(el => el.date <= filterToDate);\r\n    }\r\n    if (filterDescription) {\r\n        filteredTransactions.current = filteredTransactions.current.filter(el => RegExp(filterDescription, 'gi').test(el.description));\r\n    }\r\n    if (filterHeaders.length) {\r\n        filteredTransactions.current = filteredTransactions.current.filter(el => filterHeaders.includes(String(el.header_id)));\r\n    }\r\n    if (filterFromAmount) {\r\n        filteredTransactions.current = filteredTransactions.current.filter(el => Number(el.amount) >= filterFromAmount);\r\n    }\r\n    if (filterToAmount) {\r\n        filteredTransactions.current = filteredTransactions.current.filter(el => Number(el.amount) <= filterToAmount);\r\n    }\r\n\r\n    if (!userId) {\r\n        return (\r\n            <div data-test='transactions-not-rendered' className='Transactions'>\r\n                <p>{lang === 'en' ? 'Nobody is logged in' : 'Er is niemand ingelogd'}</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div data-test='transactions-rendered' className='Transactions'>\r\n            <Import\r\n            lang={lang} \r\n            inputField={inputField} \r\n            importTransactions={importTransactions}/>\r\n            <br />\r\n            <hr />\r\n            <Filter \r\n            lang={lang} \r\n            headers={headers} \r\n            showCorrectHeader={showCorrectHeader} \r\n            filterFromDate={filterFromDate} \r\n            setFilterFromDate={setFilterFromDate} \r\n            filterToDate={filterToDate} \r\n            setFilterToDate={setFilterToDate} \r\n            filterDescription={filterDescription} \r\n            setFilterDescription={setFilterDescription} \r\n            setFilterHeaders={setFilterHeaders} \r\n            filterFromAmount={filterFromAmount} \r\n            setFilterFromAmount={setFilterFromAmount} \r\n            filterToAmount={filterToAmount} \r\n            setFilterToAmount={setFilterToAmount}\r\n            resetFilter={resetFilter}/>\r\n            <br />\r\n            <hr />\r\n            <List\r\n            transactions={filteredTransactions.current} \r\n            headers={headers} \r\n            showCorrectHeader={showCorrectHeader} \r\n            date={date} \r\n            setDate={setDate} \r\n            description={description} \r\n            setDescription={setDescription} \r\n            headerId={headerId} \r\n            setHeaderId={setHeaderId} \r\n            amount={amount} \r\n            setAmount={setAmount} \r\n            addTransaction={addTransaction} \r\n            removeTransaction={removeTransaction} \r\n            changeTransaction={changeTransaction} \r\n            lang={lang} \r\n            maxItemsOnPage={maxItemsOnPage} \r\n            setMaxItemsOnPage={setMaxItemsOnPage}/>\r\n            <br />\r\n            <hr />\r\n            <br />\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nexport function Header({\r\n    headerId,\r\n    amount,\r\n    showCorrectHeader,\r\n    total,\r\n    inout,\r\n    removeHeader,\r\n    changeHeader}) {\r\n\r\n    function handleRemoveClick(e) {\r\n        removeHeader(Number(e.target.value));\r\n    }\r\n\r\n    function handleChangeHeader(e) {\r\n        changeHeader(headerId, e.target.value)\r\n    }\r\n \r\n     return(\r\n        <tr>\r\n            <td className='column-header'><input type='text' value={showCorrectHeader(headerId)} onChange={handleChangeHeader}/></td>\r\n            <td className={'column-amount ' + inout}>&#8364; {amount.toFixed(2)}</td>\r\n            <td className='column-percentage'>{total > 0 ? (amount / total * 100).toFixed(0) : 0}</td>\r\n            <td className='column-remove'><button value={headerId} onClick={handleRemoveClick}>&#215;</button></td>\r\n        </tr>\r\n      );\r\n}","import React from 'react';\r\nimport {Header} from '../Header/Header';\r\n\r\nexport function HeaderTable({\r\n    inout, \r\n    calculate, \r\n    showCorrectHeader, \r\n    addHeader,\r\n    newHeaderIn, \r\n    setNewHeaderIn, \r\n    newHeaderOut, \r\n    setNewHeaderOut, \r\n    removeHeader, \r\n    changeHeader,\r\n    showEmpty, \r\n    lang}) {\r\n\r\n    let [headers, total] = calculate();\r\n\r\n    function handleAddClick() {\r\n        addHeader(inout === 'in' ? newHeaderIn : newHeaderOut, inout === 'in' ? true : false)\r\n        inout === 'in' ? setNewHeaderIn('') : setNewHeaderOut('');\r\n    }\r\n\r\n     return (\r\n        <div className='Headertable'>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th className='column-header'>{lang === 'en' ? 'Header' : 'Rubriek'}</th>\r\n                        <th className='column-amount'>{lang === 'en' ? 'Amount' : 'Bedrag'}</th>\r\n                        <th className='column-percentage'>%</th>\r\n                        <th className='column-remove'></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                <tr>\r\n                        <td className='column-header'><input type='text' value={inout === 'in' ? newHeaderIn : newHeaderOut} onChange={e => inout === 'in' ? setNewHeaderIn(e.target.value) : setNewHeaderOut(e.target.value)} /></td>\r\n                        <td className='column-amount'></td>\r\n                        <td className='column-percentage'></td>\r\n                        <td className='column-remove'><button onClick={handleAddClick}>+</button></td>\r\n\r\n                    </tr>\r\n                    {Object.entries(headers).sort((a, b) => {\r\n                        if (showCorrectHeader(Number(a[0])) < showCorrectHeader(Number(b[0]))) {\r\n                            return -1;\r\n                        }\r\n                        else {\r\n                            return 1;\r\n                        }\r\n                    }).map((el, i) => {\r\n                            return (el[1] > 0 || showEmpty) && <Header\r\n                            key={i}\r\n                            headerId={Number(el[0])}\r\n                            amount={Number(el[1])}\r\n                            showCorrectHeader={showCorrectHeader}\r\n                            total={total}\r\n                            inout={inout}\r\n                            removeHeader={removeHeader}\r\n                            changeHeader={changeHeader}/>\r\n                        })}\r\n                    <tr>\r\n                        <td className='column-header'><b>{lang === 'en' ? 'Total' : 'Totaal'}</b></td>\r\n                        <td className={'column-amount ' + inout}><b>&#8364; {total.toFixed(2)}</b></td>\r\n                        <td className='column-percentage'>{total > 0 ? 100 : 0}</td>\r\n                        <th className='column-remove'></th>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n    \r\n}","import React from 'react';\r\n\r\nexport function BarChart({lang, calculate, showCorrectHeader, showEmpty}) {\r\n\r\n    let [headers, total] = calculate();\r\n\r\n    if (!showEmpty) {\r\n        for (let header in headers) {\r\n            if (headers[header] === 0) {\r\n                delete headers[header];\r\n            }\r\n        }\r\n    }\r\n \r\n    let numberOfBars = Object.keys(headers).length\r\n    let longestBar = Math.max(...Object.values(headers))\r\n    headers = (Object.entries(headers).sort())\r\n    let bars = [];\r\n    let ticks = [];\r\n\r\n    for (let i = 0; i < numberOfBars; i++) {\r\n        let x = i * (100 / numberOfBars);\r\n        let y = 100 - headers[i][1] / longestBar * 100;\r\n        let width = 100 / numberOfBars;\r\n        let height = headers[i][1] / longestBar * 100;\r\n        let color = `hsl(${i * 360 / numberOfBars}, 100%, 50%)`\r\n        let percentage = headers[i][1] / total * 100;\r\n        bars.push([x, y, width, height, showCorrectHeader(Number(headers[i][0])), color, percentage]);\r\n    }\r\n\r\n    for (let i = 0; i <= 20; i++) {\r\n        let y = i * 25;\r\n        let number = (longestBar - i * (longestBar / 20)).toFixed(0);\r\n        ticks.push([y, number]);\r\n    }\r\n\r\n    if (total === 0) {\r\n        return <p>{lang === 'en' ? 'No data for this period' : 'Geen gegevens voor deze periode'}</p>\r\n    }\r\n    \r\n    return(\r\n        <div className='Barchart'>\r\n            <svg className='ticks' xmlns=\"http://www.w3.org/2000/svg\" viewBox='0 0 50 500' width='50' height='500'>\r\n                {ticks.map((tick, i) => {\r\n                    return(\r\n                        i !== 0 && i !== ticks.length - 1 && <g key={i}>\r\n                            <text x='5' y={tick[0] + 4} fontSize='12'>{tick[1]}</text>\r\n                            <line x1='30' y1={tick[0]} x2='45' y2={tick[0]} stroke='black'/>\r\n\r\n                        </g>\r\n                    );\r\n                })}\r\n\r\n            </svg>\r\n            <svg className='bars' xmlns=\"http://www.w3.org/2000/svg\" viewBox='0 0 100 100' width='500' height='500'>\r\n                {bars.map((bar, i) => {\r\n                    return (\r\n                        <rect key={i} x={bar[0]} y={bar[1]} width={bar[2]} height={bar[3]} stroke='black' strokeWidth='0.25' fill={bar[5]}/>\r\n                    );\r\n                })}\r\n            </svg>\r\n            <svg className='legend' xmlns=\"http://www.w3.org/2000/svg\" viewBox='0 0 100 100' width='500' height='500' >\r\n                {bars.map((bar, i) => {\r\n                    return (\r\n                        <g key={i}>\r\n                            <rect x='4' y={i * 5 + 2} width='4' height='4' stroke='black' strokeWidth='0.5' fill={bar[5]}/>\r\n                            <text x='9' y={i * 5 + 5} fontSize='4'>{bar[4] + ' (' + bar[6].toFixed() + '%)'}</text>\r\n                        </g>\r\n                    );\r\n                })}\r\n            </svg>\r\n        </div>\r\n    );\r\n  }","import React from 'react';\r\n\r\nexport function PieChart({lang, calculate, showCorrectHeader, showEmpty}) {\r\n\r\n    let [headers, total] = calculate();\r\n\r\n    if (!showEmpty) {\r\n        for (let header in headers) {\r\n            if (headers[header] === 0) {\r\n                delete headers[header];\r\n            }\r\n        }\r\n    }\r\n\r\n    headers = (Object.entries(headers).sort());\r\n    let subTotal = 0;\r\n    let slices = [];\r\n\r\n    for (let i = 0; i < headers.length; i++) {\r\n        let startX = 100 * Math.cos(2 * Math.PI * (subTotal / total))\r\n        let startY = 100 * Math.sin(2 * Math.PI * (subTotal / total))\r\n        let moreThanHalf = headers[i][1] < total / 2 ? 0 : 1\r\n        subTotal += headers[i][1];\r\n        let endX = 100 * Math.cos(2 * Math.PI * (subTotal / total))\r\n        let endY = 100 * Math.sin(2 * Math.PI * (subTotal / total))\r\n        let color = `hsl(${i * 360 / headers.length}, 100%, 50%)`\r\n        let percentage = headers[i][1] / total * 100;\r\n        slices.push([startX, startY, moreThanHalf, endX, endY, color, showCorrectHeader(Number(headers[i][0])), percentage])\r\n    }\r\n\r\n    if (total === 0) {\r\n        return <p>{lang === 'en' ? 'No data for this period' : 'Geen gegevens voor deze periode'}</p>\r\n    }\r\n    \r\n    return(\r\n        <div className='Piechart'>\r\n                <svg className='pie' xmlns=\"http://www.w3.org/2000/svg\" viewBox='-100 -100 200 200' width='500' height='500' transform='rotate(-90)'>\r\n                {slices.map((slice, i) => {\r\n                return <path key={i} d={'M 0 0 L ' + slice[0] + ' ' + slice[1] + ' A 100 100 0 ' + slice[2] + ' 1 ' + slice[3] + ' ' + slice[4] + ' Z'} stroke='black' strokeWidth='0.25' fill={slice[5]}/>\r\n            })}\r\n            </svg>\r\n            <svg className='legend' xmlns=\"http://www.w3.org/2000/svg\" viewBox='0 0 100 100' width='500' height='500' >\r\n                {slices.map((slice, i) => {\r\n                    return (\r\n                        <g key={i}>\r\n                            <rect x='4' y={i * 5 + 2} width='4' height='4' stroke='black' strokeWidth='0.5' fill={slice[5]}/>\r\n                            <text x='9' y={i * 5 + 5} fontSize='4'>{slice[6] + ' (' + slice[7].toFixed() + '%)'}</text>\r\n                        </g>\r\n                    );\r\n                })}\r\n            </svg>\r\n        </div>\r\n\r\n    );\r\n}","import React from 'react';\r\nimport {HeaderTable} from '../HeaderTable/HeaderTable';\r\nimport {BarChart} from '../BarChart/BarChart'\r\nimport {PieChart} from '../PieChart/PieChart'\r\n\r\nexport function Overview({\r\n    userId,\r\n    transactions, \r\n    headers,\r\n    showCorrectHeader, \r\n    fromDate, \r\n    setFromDate, \r\n    toDate, \r\n    setToDate, \r\n    addHeader, \r\n    newHeaderIn,\r\n    setNewHeaderIn, \r\n    newHeaderOut, \r\n    setNewHeaderOut, \r\n    removeHeader, \r\n    changeHeader,\r\n    showEmpty, \r\n    setShowEmpty, \r\n    view, \r\n    setView, \r\n    lang}) {\r\n\r\n    function handleChange(e) {\r\n        setShowEmpty(e.target.value === 'true' ? false : true);\r\n    }\r\n\r\n    function calculateTotalIncome() {\r\n        return transactions\r\n        .filter(transaction => transaction.date >= fromDate && transaction.date <= toDate)\r\n        .filter(transaction => transaction.is_income)\r\n        .reduce((a, b) => a + Number(b.amount), 0);\r\n    }\r\n\r\n    function calculateTotalExpenses() {\r\n        return transactions\r\n        .filter(transaction => transaction.date >= fromDate && transaction.date <= toDate)\r\n        .filter(transaction => !transaction.is_income)\r\n        .reduce((a, b) => a + Number(b.amount), 0);\r\n    }\r\n\r\n    //Calculates the total income and the income for each header separately, in the selected time period\r\n    function calculateIncomePerHeader() {\r\n\r\n        const incomeHeaders = {};\r\n        for (let header of headers) {\r\n            if (header.is_income) {\r\n                incomeHeaders[header.id] = 0;\r\n            }\r\n        }\r\n\r\n        //Filter transactions in selected time period\r\n        let array = transactions.filter(transaction => transaction.date >= fromDate && transaction.date <= toDate);\r\n        if (!array.length) return [incomeHeaders, 0];\r\n\r\n        //For each transaction, check if header is in income headers. If so, update the amount for that header and the total amount\r\n        for (let transaction of array) {\r\n            if (transaction.header_id in incomeHeaders) {\r\n                incomeHeaders[transaction.header_id] += Number(transaction.amount);\r\n            }\r\n         }\r\n        return [incomeHeaders, calculateTotalIncome()];\r\n    }\r\n\r\n    //Calculates the total income and the income for each header separately, in the selected time period\r\n    function calculateExpensesPerHeader() {\r\n\r\n        const expenseHeaders = {};\r\n        for (let header of headers) {\r\n            if (!header.is_income) {\r\n                expenseHeaders[header.id] = 0;\r\n            }\r\n        }\r\n\r\n        //Filter transactions in selected time period\r\n        let array = transactions.filter(transaction => transaction.date >= fromDate && transaction.date <= toDate);\r\n        if (!array.length) return [expenseHeaders, 0];\r\n\r\n        //For each transaction, check if header is in income headers. If so, update the amount for that header and the total amount\r\n        for (let transaction of array) {\r\n            if (transaction.header_id in expenseHeaders) {\r\n                expenseHeaders[transaction.header_id] += Number(transaction.amount);\r\n            }\r\n         }\r\n         return [expenseHeaders, calculateTotalExpenses()];\r\n    }\r\n\r\n    if (!userId) {\r\n        return (\r\n            <div className='Overview'>\r\n                <p>{lang === 'en' ? 'Nobody is logged in' : 'Er is niemand ingelogd'}</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className='Overview'>\r\n            <h2>{lang === 'en' ? 'View' : 'Weergave'}</h2>\r\n            <label htmlFor='from'>{lang === 'en' ? 'From' : 'Van'}:</label>\r\n            <input type='date' id='from' value={fromDate} onChange={e => setFromDate(e.target.value)}/>\r\n            <label htmlFor='to'>{lang === 'en' ? 'To' : 'Tot'}:</label>\r\n            <input type='date' id='to' value={toDate} onChange={e => setToDate(e.target.value)}/>\r\n            <br />\r\n            <br />\r\n            <label>{lang === 'en' ? 'Chart:' : 'Diagram: '}</label>\r\n            <input type='radio' name='view' id='table' value='table' checked={view === 'table'} onChange={e => setView(e.target.value)}/>\r\n            <label htmlFor='table'>{lang === 'en' ? 'Table' : 'Tabel'}</label>\r\n            <input type='radio' name='view' id='bars' value='bars' checked={view === 'bars'} onChange={e => setView(e.target.value)} />\r\n            <label htmlFor='bar'>{lang === 'en' ? 'Bar' : 'Staaf'}</label>\r\n            <input type='radio' name='view' id='pie' value='pie' checked={view === 'pie'} onChange={e => setView(e.target.value)} />\r\n            <label htmlFor='pie'>{lang === 'en' ? 'Pie' : 'Taart'}</label>\r\n            <br />\r\n            <br />\r\n            <label>{lang === 'en' ? 'Headers: ' : 'Rubrieken: '} </label>\r\n            <input type='checkbox' id='empty' value={showEmpty} checked={showEmpty} onChange={handleChange}></input>\r\n            <label htmlFor='empty'>{lang === 'en' ? 'Show empty headers' : 'Toon lege rubrieken'}</label>\r\n            <br />\r\n            <hr />\r\n            <h2>{lang === 'en' ? 'Net result' : 'Netto resultaat'}</h2>\r\n            <h3 className={calculateTotalIncome() - calculateTotalExpenses() < 0 ? 'neg' : 'pos'}>&#8364; {(calculateTotalIncome() - calculateTotalExpenses()).toFixed(2)}</h3>\r\n            <br />\r\n            <hr />\r\n            <h2>{lang === 'en' ? 'Income' : 'Inkomsten'}</h2>\r\n            {view === 'table' && <HeaderTable\r\n            inout={'in'} \r\n            calculate={calculateIncomePerHeader} \r\n            showCorrectHeader={showCorrectHeader} \r\n            addHeader={addHeader} \r\n            newHeaderIn={newHeaderIn} \r\n            setNewHeaderIn={setNewHeaderIn} \r\n            removeHeader={removeHeader} \r\n            changeHeader={changeHeader}\r\n            showEmpty={showEmpty} \r\n            lang={lang}/>}\r\n            {view === 'bars' && <BarChart\r\n            lang={lang}\r\n            calculate={calculateIncomePerHeader} \r\n            showCorrectHeader={showCorrectHeader} \r\n            showEmpty={showEmpty}/>}\r\n            {view === 'pie' && <PieChart\r\n            lang={lang}\r\n            calculate={calculateIncomePerHeader} \r\n            showCorrectHeader={showCorrectHeader} \r\n            showEmpty={showEmpty}/>}\r\n            <br />\r\n            <hr />\r\n            <h2>{lang === 'en' ? 'Expenses' : 'Uitgaven'}</h2>\r\n            {view === 'table' && <HeaderTable \r\n            inout={'out'} \r\n            calculate={calculateExpensesPerHeader} \r\n            showCorrectHeader={showCorrectHeader} \r\n            addHeader={addHeader}\r\n            newHeaderOut={newHeaderOut} \r\n            setNewHeaderOut={setNewHeaderOut} \r\n            removeHeader={removeHeader} \r\n            changeHeader={changeHeader}\r\n            showEmpty={showEmpty} \r\n            lang={lang} />}\r\n            {view === 'bars' && <BarChart\r\n            lang={lang}\r\n            calculate={calculateExpensesPerHeader} \r\n            showCorrectHeader={showCorrectHeader} \r\n            showEmpty={showEmpty}/>}\r\n            {view === 'pie' && <PieChart \r\n            lang={lang}\r\n            calculate={calculateExpensesPerHeader} \r\n            showCorrectHeader={showCorrectHeader} \r\n            showEmpty={showEmpty}/>}\r\n            <br />\r\n            <hr />\r\n            <br />\r\n       </div>\r\n    );\r\n}\r\n","const Server = {\r\n\r\n    host: 'https://xpensoft.herokuapp.com',\r\n\r\n    async login(email, password) {\r\n            const response = await fetch(`${this.host}/login`, {\r\n                method: 'GET',\r\n                headers: {'Content-Type': 'application/json', email, password},\r\n            });\r\n            if (response.status === 401) {\r\n                throw new Error();\r\n            }\r\n            const jsonResponse = await response.json();\r\n            return jsonResponse;\r\n    },\r\n\r\n    async register(newEmail, newPassword) {\r\n             const response = await fetch(`${this.host}/register`, {\r\n                method: 'POST',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({newEmail, newPassword})\r\n            });\r\n            if (response.status === 401) {\r\n                throw new Error();\r\n            }\r\n            const jsonResponse = await response.json();\r\n            return jsonResponse;\r\n     },\r\n\r\n     async getPassword(email) {\r\n        const response = await fetch(`${this.host}/getpassword/${email}`);\r\n        if (response.status === 404) {\r\n            throw new Error();\r\n        }\r\n        const jsonResponse = await response.json();\r\n        return jsonResponse;\r\n    },\r\n\r\n    async getHeaders(userId, email, password) {\r\n            const response = await fetch(`${this.host}/headers/${userId}`, {\r\n                method: 'GET',\r\n                headers: {'Content-Type': 'application/json', userId, email, password}\r\n            });\r\n            const jsonResponse = await response.json();\r\n            return jsonResponse;\r\n     },\r\n    \r\n    async addHeader(name, isIncome, userId, email, password) {\r\n            const response = await fetch(`${this.host}/headers`, {\r\n                method: 'POST',\r\n                headers: {'Content-Type': 'application/json', userId, email, password},\r\n                body: JSON.stringify({name, isIncome, userId})\r\n            });\r\n            const jsonResponse = await response.json();\r\n            return jsonResponse;\r\n    },\r\n\r\n    async changeHeader(headerId, name, userId, email, password) {\r\n        const response = await fetch(`${this.host}/headers/${headerId}`, {\r\n           method: 'PUT',\r\n           headers: {'Content-Type': 'application/json', userId, email, password},\r\n           body: JSON.stringify({name})\r\n       });\r\n       const jsonResponse = await response.json();\r\n       return jsonResponse;\r\n  },\r\n\r\n    async deleteHeader(id, userId, email, password) {\r\n            const response = await fetch(`${this.host}/headers/${id}`, {\r\n                method: 'DELETE',\r\n                headers: {'Content-Type': 'application/json', userId, email, password}\r\n            })\r\n            return response;\r\n     },\r\n\r\n    async getTransactions(userId, email, password) {\r\n             const response = await fetch(`${this.host}/transactions/${userId}`, {\r\n                method: 'GET',\r\n                headers: {'Content-Type': 'application/json', userId, email, password},\r\n            });\r\n            const jsonResponse = await response.json();\r\n            return jsonResponse;\r\n    },\r\n\r\n    async addTransaction(date, description, headerId, amount, userId, email, password) {\r\n             const response = await fetch(`${this.host}/transactions`, {\r\n                method: 'POST',\r\n                headers: {'Content-Type': 'application/json', userId, email, password},\r\n                body: JSON.stringify({date, description, headerId, amount, userId})\r\n            });\r\n            const jsonResponse = await response.json();\r\n            return jsonResponse;\r\n   },\r\n\r\n    async changeTransaction(id, description, headerId, userId, email, password) {\r\n             const response = await fetch(`${this.host}/transactions/${id}`, {\r\n                method: 'PUT',\r\n                headers: {'Content-Type': 'application/json', userId, email, password},\r\n                body: JSON.stringify({description, headerId})\r\n            });\r\n            const jsonResponse = await response.json();\r\n            return jsonResponse;\r\n       },\r\n\r\n     async deleteTransaction(id, userId, email, password) {\r\n            const response = await fetch(`${this.host}/transactions/${id}`, {\r\n                method: 'DELETE',\r\n                headers: {'Content-Type': 'application/json', userId, email, password},\r\n            })\r\n            return response;\r\n    }, \r\n }\r\n\r\nexport default Server;","import './App.css';\r\nimport React, {useState, useEffect} from 'react';\r\nimport {Switch, Route, Redirect, NavLink} from 'react-router-dom';\r\nimport {User} from './components/User/User';\r\nimport {Transactions} from './components/Transactions/Transactions';\r\nimport {Overview} from './components/Overview/Overview';\r\nimport Server from './utils/Server';\r\n\r\nfunction App() {\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const [newEmail, setNewEmail] = useState('');\r\n  const [newPassword1, setNewPassword1] = useState('');\r\n  const [newPassword2, setNewPassword2] = useState('');\r\n\r\n  const [forgotPasswordEmail, setForgotPasswordEmail] = useState('');\r\n  \r\n  const [userId, setUserId] = useState(0);\r\n  \r\n  //Hold the transactions\r\n  const [transactions, setTransactions] = useState([]);\r\n  \r\n  //Hold the headers\r\n  const [headers, setHeaders] = useState([]);\r\n\r\n  //Hold the data for a new transaction\r\n  const [date, setDate] = useState(null);\r\n  const [description, setDescription] = useState('');\r\n  const [headerId, setHeaderId] = useState('');\r\n  const [amount, setAmount] = useState('');\r\n\r\n  //Hold the data for a new header\r\n  const [newHeaderIn, setNewHeaderIn] = useState('');\r\n  const [newHeaderOut, setNewHeaderOut] = useState('');\r\n\r\n  //Hold the data for transactions on page\r\n  const [maxItemsOnPage, setMaxItemsOnPage] = useState(50);\r\n \r\n  //Initialize the correct month and hold the data for the selected time period\r\n  const daysInMonth = [31, isLeapYear(new Date().getFullYear()) ? 29 : 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n  const [fromDate, setFromDate] = useState(`${new Date().getFullYear()}-${String(new Date().getMonth() + 1).padStart(2, '0')}-01`)\r\n  const [toDate, setToDate] = useState(`${new Date().getFullYear()}-${String(new Date().getMonth() + 1).padStart(2, '0')}-${daysInMonth[new Date().getMonth()]}`);\r\n\r\n  //View option for the overview section\r\n  const [view, setView] = useState('table');\r\n\r\n  //Options\r\n  const [lang, setLang] = useState('en');\r\n  const [showEmpty, setShowEmpty] = useState(true);\r\n  \r\n  //Change the language\r\n  function handleLangChange(e) {\r\n    setLang(e.target.value);\r\n}\r\n\r\n  function login(email, password) {\r\n    Server.login(email, password).then(res => {\r\n      setUserId(res);\r\n      alert(lang === 'en' ? `Succesfully logged in as ${email}`: `Succesvol ingelogd als ${email}`);\r\n    }).catch(err => {\r\n      alert(lang === 'en' ? 'Invalid combination of email and password' : 'Ongeldige combinatie van email en wachtwoord');\r\n    })\r\n  }\r\n\r\n  function logout() {\r\n    setUserId(prev => 0);\r\n    setEmail(prev => '');\r\n    setPassword(prev => '');\r\n    setTransactions(prev => []);\r\n    setHeaders(prev => []);\r\n    alert(lang === 'en' ? 'Succesfully logged out' : 'Succesvol uitgelogd');\r\n  }\r\n\r\n  function register(newEmail, newPassword) {\r\n    Server.register(newEmail, newPassword).then(res => {\r\n      alert(lang === 'en' ? `Succesfully registered ${newEmail} as new user` : `${newEmail} succesvol geregistreerd als nieuwe gebruiker`);\r\n    }).catch(err => {\r\n      alert(lang === 'en' ? 'That address is already registered' : 'Dat adres is al geregistreerd');\r\n    })\r\n  }\r\n\r\n  function getPassword(forgotPasswordEmail) {\r\n    Server.getPassword(forgotPasswordEmail).then(res => {\r\n      alert(lang === 'en' ? `The password has been sent to ${forgotPasswordEmail}` : `Het wachtwoord is verzonden naar ${forgotPasswordEmail}`);\r\n    }).catch(err => {\r\n      alert(lang === 'en' ? 'That address is not registered' : 'Dat adres is niet geregistreerd');\r\n    })\r\n  }\r\n\r\n  //Add header if it's not already in the list. First letter should be uppercase with the rest lowercase.\r\n  function addHeader(name, isIncome) {\r\n    if (name.trim().length < 1 || name.trim().length > 50) {\r\n      alert(lang === 'en' ? 'Name must be between 1 and 50 characters' : 'Naam moet tussen 1 en 50 karakters bevatten');\r\n      return;\r\n    }\r\n    for (let header of headers) {\r\n      if (header.name === name) {\r\n        alert(lang === 'en' ? 'Header already exists' : 'Rubriek bestaat al');\r\n        return;\r\n      }\r\n    }\r\n    try {\r\n      Server.addHeader(name, isIncome, userId, email, password)\r\n      .then(res => setHeaders(prev => ([...res, ...prev])));\r\n    }\r\n    catch (err) {\r\n      alert(lang === 'en' ? 'Unauthorized' : 'Niet geautoriseerd');\r\n    }\r\n  }\r\n\r\n  //Remove header if it is not a default header and if there are no more transactions with that header\r\n  function removeHeader(headerId) {\r\n    let headerName = headers.find(el => el.id === headerId).name\r\n    if (headerName === 'Unallocated income' || headerName === 'Unallocated expenses') {\r\n      alert(lang === 'en' ? 'You cannot delete default headers' : 'Standaardrubrieken kunnen niet verwijderd worden');\r\n      return;\r\n    }\r\n    for (let transaction of transactions) {\r\n      if (transaction.header_id === headerId) {\r\n         alert(lang === 'en' ? 'There are still transactions with that header' : 'Er zijn nog transacties in die rubriek');\r\n        return;\r\n      }\r\n    }\r\n    try {\r\n      Server.deleteHeader(headerId, userId, email, password).then(res => res.status === 204 && setHeaders(prev => prev.filter(el => el.id !== headerId)));   \r\n    }\r\n    catch (err) {\r\n      alert(lang === 'en' ? 'Unauthorized' : 'Niet geautoriseerd');\r\n    }\r\n  }\r\n\r\n  function changeHeader(headerId, name) {\r\n    let headerName = headers.find(el => el.id === headerId).name\r\n    if (headerName === 'Unallocated income' || headerName === 'Unallocated expenses') {\r\n      alert(lang === 'en' ? 'You cannot change default headers' : 'Standaardrubrieken kunnen niet gewijzigd worden');\r\n      return;\r\n    }\r\n    if (name.trim().length < 1 || name.trim().length > 50) {\r\n      alert(lang === 'en' ? 'Name must be between 1 and 50 characters' : 'Naam moet tussen 1 en 50 karakters zijn');\r\n      return;\r\n    }\r\n    for (let header of headers) {\r\n      if (header.name === name) {\r\n        alert(lang === 'en' ? 'Header already exists' : 'Rubriek bestaat al');\r\n        return;\r\n      }\r\n    }\r\n     \r\n    try {\r\n      Server.changeHeader(headerId, name.trim(), userId, email, password)\r\n      .then(res => {\r\n        const index = headers.findIndex(el => el.id === headerId);\r\n         setHeaders(prev => [...prev.slice(0, index), ...res, ...prev.slice(index + 1, prev.length)]);\r\n       })\r\n    }\r\n    catch (err) {\r\n      alert(lang === 'en' ? 'Unauthorized' : 'Niet geautoriseerd');\r\n     }\r\n  }\r\n\r\n  //Add an transaction to the list\r\n  function addTransaction(date, description, headerId, amount) {\r\n    if (!date) {\r\n      alert(lang === 'en' ? 'Please select a date' : 'Selecteer een datum');\r\n      return;\r\n    }\r\n    if (description.trim().length < 1 || description.trim().length > 100) {\r\n      alert(lang === 'en' ? 'Description must be between 1 and 100 characters' : 'Omschrijving moet tussen 1 en 100 karakters zijn');\r\n      return;\r\n    }\r\n    if (!headerId) {\r\n      alert(lang === 'en' ? 'Please select a header' : 'Selecteer een rubriek');\r\n      return;\r\n    }\r\n    if (amount < 0.01 || amount > 999999.99) {\r\n      alert(lang === 'en' ? 'Amount must be between 0.01 and 999999.99' : 'Bedrag moet tussen 0.01 en 999999.99 zijn');\r\n      return;\r\n    }\r\n    try {\r\n      Server.addTransaction(date, description.trim(), headerId, amount, userId, email, password)\r\n      .then(res => {\r\n        setTransactions(prev => (sortByDateThenId([...res, ...prev])))\r\n        //Reset the data fields\r\n        setDescription('');\r\n        setHeaderId('');\r\n        setAmount('');\r\n      });\r\n    }\r\n    catch (err) {\r\n      alert(lang === 'en' ? 'Unauthorized' : 'Niet geautoriseerd');\r\n    }\r\n\r\n   }\r\n\r\n  //Remove transaction from the list\r\n  function removeTransaction(id) {\r\n    try {\r\n      Server.deleteTransaction(id, userId, email, password).then(res => res.status === 204 && setTransactions(prev => prev.filter(el => el.id !== id)));\r\n    }\r\n    catch (err) {\r\n      alert(lang === 'en' ? 'Unauthorized' : 'Niet geautoriseerd');\r\n    }\r\n   }\r\n\r\n  //Change transaction\r\n  function changeTransaction(id, description, headerId) {\r\n    if (description.trim().length < 1 || description.trim().length > 100) {\r\n      alert(lang === 'en' ? 'Description must be between 1 and 100 characters' : 'Omschrijving moet tussen 1 en 100 karakters zijn');\r\n      return;\r\n    }\r\n    if (!headerId) {\r\n      alert(lang === 'en' ? 'Please select a header' : 'Selecteer een rubriek');\r\n      return;\r\n    }\r\n    try {\r\n      Server.changeTransaction(id, description.trim(), headerId, userId, email, password)\r\n      .then(res => {\r\n        const index = transactions.findIndex(el => el.id === id);\r\n         setTransactions(prev => [...prev.slice(0, index), ...res, ...prev.slice(index + 1, prev.length)]);\r\n       })\r\n    }\r\n    catch (err) {\r\n      alert(lang === 'en' ? 'Unauthorized' : 'Niet geautoriseerd');\r\n    }\r\n }\r\n\r\n  function showCorrectHeader(headerId) {\r\n    let headerName = headers.find(el => el.id === headerId).name;\r\n    if (lang === 'nl' && headerName === 'Unallocated income') {\r\n      return 'Ongerubriceerde inkomsten';\r\n    }\r\n    else if (lang === 'nl' && headerName === 'Unallocated expenses') {\r\n      return 'Ongerubriceerde uitgaven';\r\n    }\r\n    else  {\r\n      return headerName;\r\n    }\r\n  }\r\n\r\n  function sortByDateThenId(array) {\r\n    return array.sort((a, b) => {\r\n      if (a.date > b.date) {\r\n        return -1;\r\n      }\r\n      else if (a.date < b.date) {\r\n        return 1;\r\n      }\r\n      else {\r\n        if (a.id > b.id) {\r\n          return -1\r\n        }\r\n        else {\r\n          return 1;\r\n        }\r\n        }\r\n    })\r\n  }\r\n\r\n  //Check whether the current year is a leap year\r\n  function isLeapYear(year) {\r\n    return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!userId) {\r\n      return;\r\n    }\r\n    let promises = [Server.getHeaders(userId, email, password), Server.getTransactions(userId, email, password)];\r\n    try {\r\n      Promise.all(promises).then(res => {\r\n        setHeaders(prev => [...res[0]]);\r\n        setTransactions(prev => [...sortByDateThenId(res[1])]);\r\n      });\r\n    }\r\n    catch (err) {\r\n      alert(lang === 'en' ? 'Unauthorized' : 'Niet geautoriseerd');\r\n    }\r\n   }, [userId, email, password, lang]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <nav>\r\n        <NavLink to='/user' activeClassName='active'>\r\n          {lang === 'en' ? 'User' : 'Gebruiker'}\r\n        </NavLink>\r\n        <NavLink data-test='navlink-transactions' to='/transactions' activeClassName='active'>\r\n          {lang === 'en' ? 'Transactions' : 'Transacties'}\r\n        </NavLink>\r\n        <NavLink to='/overview' activeClassName='active'>\r\n        {lang === 'en' ? 'Overview' : 'Overzicht'}\r\n        </NavLink>\r\n        <div className='langbar'>\r\n            <input type='radio' id='en' name='lang' value='en' checked={lang === 'en' ? true : false} onChange={handleLangChange}/>\r\n            <label htmlFor='en'>English</label>\r\n            <input type='radio' id='nl' name='lang' value='nl' checked={lang === 'en' ? false : true} onChange={handleLangChange}/>\r\n            <label htmlFor='nl'>Nederlands</label>\r\n            <button onClick={logout}>{lang === 'en' ? 'Logout' : 'Uitloggen'}</button>\r\n        </div>\r\n      </nav>\r\n      <main>\r\n        <Switch>\r\n          <Route exact path='/'>\r\n            <Redirect to='/user' />\r\n          </Route>\r\n          <Route path='/user'>\r\n            <User\r\n            email={email}\r\n            setEmail={setEmail}\r\n            password={password}\r\n            setPassword={setPassword}\r\n            newEmail={newEmail}\r\n            setNewEmail={setNewEmail}\r\n            newPassword1={newPassword1}\r\n            setNewPassword1={setNewPassword1}\r\n            newPassword2={newPassword2}\r\n            setNewPassword2={setNewPassword2}\r\n            forgotPasswordEmail={forgotPasswordEmail}\r\n            setForgotPasswordEmail={setForgotPasswordEmail}\r\n            getPassword={getPassword}\r\n            login={login}\r\n            register={register}\r\n            lang={lang} />\r\n          </Route>\r\n          <Route path='/transactions'>\r\n            <Transactions\r\n            userId={userId}\r\n            transactions={transactions} \r\n            headers={headers} \r\n            showCorrectHeader={showCorrectHeader} \r\n            date={date} \r\n            setDate={setDate} \r\n            description={description} \r\n            setDescription={setDescription} \r\n            headerId={headerId} \r\n            setHeaderId={setHeaderId} \r\n            amount={amount} \r\n            setAmount={setAmount} \r\n            addTransaction={addTransaction} \r\n            removeTransaction={removeTransaction} \r\n            changeTransaction={changeTransaction} \r\n            lang={lang} \r\n            maxItemsOnPage={maxItemsOnPage} \r\n            setMaxItemsOnPage={setMaxItemsOnPage}/>\r\n          </Route>\r\n          <Route path='/overview'>\r\n            <Overview \r\n            userId={userId}\r\n            transactions={transactions} \r\n            headers={headers} \r\n            showCorrectHeader={showCorrectHeader} \r\n            fromDate={fromDate} \r\n            setFromDate={setFromDate} \r\n            toDate={toDate} \r\n            setToDate={setToDate} \r\n            addHeader={addHeader} \r\n            newHeaderIn={newHeaderIn} \r\n            setNewHeaderIn={setNewHeaderIn} \r\n            newHeaderOut={newHeaderOut} \r\n            setNewHeaderOut={setNewHeaderOut} \r\n            removeHeader={removeHeader} \r\n            changeHeader={changeHeader}\r\n            showEmpty={showEmpty} \r\n            setShowEmpty={setShowEmpty} \r\n            view={view} \r\n            setView={setView} \r\n            lang={lang}/>\r\n            </Route>\r\n         </Switch>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter as Router} from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}